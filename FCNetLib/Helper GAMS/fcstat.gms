$title FcNetStat Management program for fcnet model

$version 140 goto OK
$abort 'need newer GAMS version'
$label OK

$set tblheaders InputFileName,NumberOfVariables,NumberOfEquations,NumberOfNonZeros,ModelStatus,SolverTime,ObjectiveValue,ObjectiveValueEstimate,xxx
set th headers / %tblheaders%/

$escape =
$onecho > rdata.gms 
table %=1(*,th)
$ondelim
%tblheaders%
$include %=1.txt
$offdelim
;
$offecho
$escape %

* Read the tracefiles from the different runs:
$offlisting
$batinclude rdata xpress
$batinclude rdata cplex
$batinclude rdata cplexcuts
$batinclude rdata cplexcutsheur
$onlisting

alias (u,*)

Set m(u)  all models
    ms(u) simple models
    md(u) difficult models;

m(u)  = cplex(u,'NumberOfVariables');
ms(u) = cplex(u,'NumberOfVariables') and not cplexcuts(u,'NumberOfVariables');
md(u) = cplexcuts(u,'NumberOfVariables');

set hth / '#Eqns', '#Vars', '#NZ', 'BestInt', 'BestBnd', 'rel.Gap' /
parameter rep;
rep(m,'#Eqns')   = cplex(m,'NumberOfEquations');
rep(m,'#Vars')   = cplex(m,'NumberOfVariables');
rep(m,'#NZ')     = cplex(m,'NumberOfNonZeros');

* Simple Models from CPLEX and XPRESS run
rep(ms,'BestInt') = round(min(cplex(ms,'ObjectiveValue'),xpress(ms,'ObjectiveValue')),4);
rep(ms,'BestBnd') = round(max(cplex(ms,'ObjectiveValueEstimate'),xpress(ms,'ObjectiveValueEstimate')),4);
 
* Difficult model from all runs
rep(md,'BestInt') = round(min(cplex        (md,'ObjectiveValue'),
                              xpress       (md,'ObjectiveValue'),
                              cplexcuts    (md,'ObjectiveValue'), 
                              cplexcutsheur(md,'ObjectiveValue')),4);
rep(md,'BestBnd') = round(max(cplex        (md,'ObjectiveValueEstimate'),
                              xpress       (md,'ObjectiveValueEstimate'),
                              cplexcuts    (md,'ObjectiveValueEstimate'), 
                              cplexcutsheur(md,'ObjectiveValueEstimate')),4);

rep(m,'rel.Gap') = round(100*(rep(m,'BestInt') - rep(m,'BestBnd'))/rep(m,'BestBnd'),2);

file fhtm / fcnetstat.htm /; put fhtm  '<!-- GAMS HTML output -->' /;
$onput
<html> <head> <title>FCNetLib Model Statistics</title>
<!--#include virtual="/performance/header.html" -->

<h2>Fixed Cost Network Flow Library (FCNetLib)</h2>

<p>FCNetLib is a collection of instances for the fixed cost network
flow problem. The purpose of the collection is to provide a unified
presentation of the data instances together with some GAMS models that
implement a straight forward IP formulation and a more sophisticated
version that utilizes the GAMS/BCH facility. A class of known cuts
(dicuts) is implemented as well as the local branching heuristic
within the BCH framework.

<p> The original models were in XPRESS-Modeler format and collected by
Laurence Wolsey and collagues at Universite Catholique de
Louvain. They were translated by Alexey Koptsevich into GAMS.

<h4>Reference</h4>
<ul> <li><A href="http://www.core.ucl.ac.be:16080/wolsey/ufcn.htm">
         Uncapacitated Fixed Charge Networks</a>, by Laurence Wolsey
     <li>F. Ortega and L.A. Wolsey. A branch-and-cut algorithm for the 
         single-commodity, uncapacitated, fixed-charge network flow problem.
         Networks 41 (2003), no. 3, 143--158. 
         (<a href="http://www.core.ucl.ac.be:16080/wolsey/ufcn/ufc29-10.ps">discussion 
         paper</a> with detailed results)
</ul>

<h4>Download</h4>

Download <a href="FCNetLib.zip">FCNetLib.zip</a>

<h4>Additional Information</h4>
<ul><li><a href="http://www.gams.com/docs/bch.htm">GAMS BCH Facility</a>
    <li><a href="http://www.gams.com/presentations/present_bch_global.pdf">
         Global Optimization and the GAMS Branch-and-Cut Facility</a> 
         (talk at CORS/INFORMS Joint International Meeting May 2004, Banff, Canada)
    <li><a href="kopts/bench-bchf.htm">Benchmarking GAMS BCHF</a> 
        (detailed description of work done for the CORS talk by Alexey Koptsevich)
</ul>

<h4>FCNet GAMS Models</h4>
<ul><li><a href="bchfcnet.gms">bchfcnet.gms</a>: Main GAMS model for the Fixed Cost Network Flow Problem
    <li><a href="bchdicut.inc">bchdicut.inc</a>: GAMS model for generating the dicuts
    <li><a href="bchfcheu.inc">bchfcheu.inc</a>: GAMS model with local branching heuristic
</ul>

<h4>Helper GAMS Programs</h4>
<ul><li><a href="driver.gms">driver.gms</a>: Driver script
    <li><a href="data.gms">data.gms</a>: Run script generator
    <li><a href="fcstat.gms">fcstat.gms</a>: Model to generate this web page
</ul>

<h4>Trace files from pure CPLEX, pure XPRESS, and CPLEX with dicuts and heuristic</h4>
<ul><li><a href="cplex.txt">cplex.txt</a>: pure CPLEX
    <li><a href="xpress.txt">xpress.txt</a>: pure XPRESS
    <li><a href="cplexcuts.txt">cplexcuts.txt</a>: CPLEX with dicuts generated by BARON
    <li><a href="cplexcutsheur.txt">cplexcutsheur.txt</a>: CPLEX with dicuts generated by BARON and local branching heuristic
</ul>

<h4>FCNetLib Model Statistics</h4>
<TABLE WIDTH="100%" BGCOLOR="#f8f8f8" BORDER=0  CELLSPACING=0 CELLPADDING=0>
<TH ALIGN=LEFT BGCOLOR="#00080"><FONT COLOR="#ffffff">Name</FONT></TH>
$offput
$set tdmacro ALIGN=RIGHT BGCOLOR="#
loop(hth, put '<TH %tdmacro%00080"><FONT COLOR="#ffffff">' hth.tl:0 '</FONT></TH>' /)
put '<TH %tdmacro%00080"><FONT COLOR="#ffffff">&nbsp;</FONT></TH>'

set c / c1 fefefe, c2 e0e0e0 /
    mc(u,c); 
scalar ordm /0/;

loop(m, 
  ordm=ordm+1;
  mc(m,'c1')$(mod(ordm,2)=1) = yes;
  mc(m,'c2')$(mod(ordm,2)=0) = yes;
);

set hth0(hth) /'#Eqns', '#Vars', '#NZ'/, hth2(hth) / 'BestBnd' /; 
$set hth0   put$hth0(hth) rep(m,hth):0:0;
$set hth2   put$hth2(hth) rep(m,hth):0:2;
$set hthgap put$(sameas(hth,'rel.Gap') and rep(m,hth)) rep(m,hth):0:2;
$set hthBI  put$sameas(hth,'BestInt') '<a href=points/' m.tl:0 '.gdx>' rep(m,hth):0:2 '</a>';

loop(mc(m,c),
  put / '<TR>'/;
  put '<TD  BGCOLOR="#' c.te(c) '"><a href="includes/' m.tl:0 '.inc">' m.tl:0 '</a></TD>'/;
  loop(hth, put '<TD %tdmacro%' c.te(c) '">'; %hth0% %hth2% %hthBI% %hthgap% put '</TD>' /)
  put '<TD %tdmacro%' c.te(c) '"> &nbsp;</TD></TR><!--' m.tl:0 ' #'
  put$(          (xpress(m,'ObjectiveValue')-rep(m,'BestInt')<0.01)) ' XPRESS';
  put$(          (cplex(m,'ObjectiveValue')-rep(m,'BestInt')<0.01)) ' CPLEX';
  put$(md(m) and (cplexcuts(m,'ObjectiveValue')-rep(m,'BestInt')<0.01)) ' CPLEXCUTS';
  put$(md(m) and (cplexcutsheur(m,'ObjectiveValue')-rep(m,'BestInt')<0.01)) ' CPLEXCUTSHEUR';
  put ' #-->' /
)
put '</TABLE>';
