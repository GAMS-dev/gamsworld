*  NLP written by GAMS Convert at 07/02/05 18:32:35
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*         31        1       30        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         34       34        0        0        0        0        0        0
*  FX      3        3        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        169      136       33        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,objvar;

Positive Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17
          ,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31;


e1..  - 0.6*x19 - 0.3*x24 - 0.36*x29 =G= -170;

e2..  - 0.6*x20 - 0.3*x25 - 0.36*x30 =G= -170;

e3..  - 0.6*x21 - 0.3*x26 - 0.36*x31 =G= -170;

e4..  - 0.6*x22 - 0.3*x27 - 0.36*x32 =G= -170;

e5..  - 0.6*x23 - 0.3*x28 - 0.36*x33 =G= -170;

e6..  - 0.4*x19 - 0.1*x24 - 0.12*x29 =G= -170;

e7..  - 0.4*x20 - 0.1*x25 - 0.12*x30 =G= -170;

e8..  - 0.4*x21 - 0.1*x26 - 0.12*x31 =G= -170;

e9..  - 0.4*x22 - 0.1*x27 - 0.12*x32 =G= -170;

e10..  - 0.4*x23 - 0.1*x28 - 0.12*x33 =G= -170;

e11..  - 0.36*x19 - 0.08*x24 - 0.06*x29 =G= -180;

e12..  - 0.36*x20 - 0.08*x25 - 0.06*x30 =G= -180;

e13..  - 0.36*x21 - 0.08*x26 - 0.06*x31 =G= -180;

e14..  - 0.36*x22 - 0.08*x27 - 0.06*x32 =G= -180;

e15..  - 0.36*x23 - 0.08*x28 - 0.06*x33 =G= -180;

e16..  - x2 + x19 =G= 0;

e17..  - x2 - x3 + x19 + x20 =G= 0;

e18..  - x2 - x3 - x4 + x19 + x20 + x21 =G= 0;

e19..  - x2 - x3 - x4 - x5 + x19 + x20 + x21 + x22 =G= 0;

e20..  - x2 - x3 - x4 - x5 - x6 + x19 + x20 + x21 + x22 + x23 =G= 0;

e21..  - x8 + x24 =G= 0;

e22..  - x8 - x9 + x24 + x25 =G= 0;

e23..  - x8 - x9 - x10 + x24 + x25 + x26 =G= 0;

e24..  - x8 - x9 - x10 - x11 + x24 + x25 + x26 + x27 =G= 0;

e25..  - x8 - x9 - x10 - x11 - x12 + x24 + x25 + x26 + x27 + x28 =G= 0;

e26..  - x14 + x29 =G= 0;

e27..  - x14 - x15 + x29 + x30 =G= 0;

e28..  - x14 - x15 - x16 + x29 + x30 + x31 =G= 0;

e29..  - x14 - x15 - x16 - x17 + x29 + x30 + x31 + x32 =G= 0;

e30..  - x14 - x15 - x16 - x17 - x18 + x29 + x30 + x31 + x32 + x33 =G= 0;

e31.. 1000*x2 - 0.3*sqr(x2) - 120*x2 - 0.02*sqr(x19 - x1) - 310*x19 - 0.005*
      sqr(x19 - x2) + 80*x2 - 80*x19 + 520*x8 - 0.1*sqr(x8) - 65*x8 - 0.01*sqr(
      x24 - x7) - 150*x24 - 0.005*sqr(x24 - x8) + 45*x8 - 45*x24 + 910*x14 - 
      0.2*sqr(x14) - 105*x14 - 0.015*sqr(x29 - x13) - 280*x29 - 0.005*sqr(x29
       - x14) + 75*x14 - 75*x29 + 1000*x3 - 0.3*sqr(x3) - 150*x3 - 0.2*sqr(x20
       - x2) - 310*x20 - 0.05*sqr(x20 - x3) + 80*x2 + 80*x3 - 80*x20 + 520*x9
       - 0.1*sqr(x9) - 65*x9 - 0.1*sqr(x25 - x8) - 150*x25 - 0.05*sqr(x25 - x9)
       + 45*x8 + 45*x9 - 45*x25 + 910*x15 - 0.2*sqr(x15) - 105*x15 - 0.15*sqr(
      x30 - x14) - 280*x30 - 0.05*sqr(x30 - x15) + 75*x14 + 75*x15 - 75*x30 - 
      80*x19 - 45*x24 - 75*x29 + 1000*x4 - 0.3*sqr(x4) - 150*x4 - 0.25*sqr(x21
       - x3) - 310*x21 - 0.06*sqr(x21 - x4) + 100*x3 + 100*x4 - 100*x21 + 520*
      x10 - 0.1*sqr(x10) - 80*x10 - 0.1*sqr(x26 - x9) - 150*x26 - 0.06*sqr(x26
       - x10) + 45*x9 + 45*x10 - 45*x26 + 1000*x16 - 0.2*sqr(x16) - 120*x16 - 
      0.15*sqr(x31 - x15) - 280*x31 - 0.06*sqr(x31 - x16) + 90*x15 + 90*x16 - 
      90*x31 + 100*x2 + 45*x8 + 90*x14 - 100*x19 - 100*x20 - 45*x24 - 45*x25 - 
      90*x29 - 90*x30 + 1100*x5 - 0.3*sqr(x5) - 170*x5 - 0.25*sqr(x22 - x4) - 
      350*x22 - 0.06*sqr(x22 - x5) + 100*x4 + 100*x5 - 100*x22 + 600*x11 - 0.1*
      sqr(x11) - 80*x11 - 0.15*sqr(x27 - x10) - 180*x27 - 0.06*sqr(x27 - x11)
       + 50*x10 + 50*x11 - 50*x27 + 1000*x17 - 0.2*sqr(x17) - 120*x17 - 0.15*
      sqr(x32 - x16) - 300*x32 - 0.06*sqr(x32 - x17) + 90*x16 + 90*x17 - 90*x32
       + 100*x2 + 100*x3 + 50*x8 + 50*x9 + 90*x14 + 90*x15 - 100*x19 - 100*x20
       - 100*x21 - 50*x24 - 50*x25 - 50*x26 - 90*x29 - 90*x30 - 90*x31 + 1100*
      x6 - 0.3*sqr(x6) - 170*x6 - 0.25*sqr(x23 - x5) - 350*x23 - 0.06*sqr(x23
       - x6) + 100*x5 + 100*x6 - 100*x23 + 600*x12 - 0.1*sqr(x12) - 80*x12 - 
      0.15*sqr(x28 - x11) - 180*x28 - 0.06*sqr(x28 - x12) + 50*x11 + 50*x12 - 
      50*x28 + 1000*x18 - 0.2*sqr(x18) - 120*x18 - 0.15*sqr(x33 - x17) - 300*
      x33 - 0.06*sqr(x33 - x18) + 90*x17 + 90*x18 - 90*x33 + 100*x2 + 100*x3 + 
      100*x4 + 50*x8 + 50*x9 + 50*x10 + 90*x14 + 90*x15 + 90*x16 - 100*x19 - 
      100*x20 - 100*x21 - 100*x22 - 50*x24 - 50*x25 - 50*x26 - 50*x27 - 90*x29
       - 90*x30 - 90*x31 - 90*x32 + objvar =E= 0;

* set non default bounds

x1.fx = 0; 
x2.up = 100; 
x3.up = 180; 
x4.up = 220; 
x5.up = 150; 
x6.up = 100; 
x7.fx = 0; 
x8.up = 280; 
x9.up = 400; 
x10.up = 450; 
x11.up = 450; 
x12.up = 400; 
x13.fx = 0; 
x14.up = 520; 
x15.up = 400; 
x16.up = 500; 
x17.up = 630; 
x18.up = 600; 

* set non default levels

x2.l = 80; 
x3.l = 100; 
x4.l = 100; 
x5.l = 50; 
x6.l = 50; 
x8.l = 100; 
x9.l = 200; 
x10.l = 250; 
x11.l = 200; 
x12.l = 200; 
x14.l = 400; 
x15.l = 200; 
x16.l = 400; 
x17.l = 500; 
x18.l = 500; 
x19.l = 100; 
x20.l = 120; 
x21.l = 150; 
x22.l = 600; 
x23.l = 100; 
x24.l = 120; 
x25.l = 250; 
x26.l = 300; 
x27.l = 250; 
x28.l = 250; 
x29.l = 410; 
x30.l = 250; 
x31.l = 410; 
x32.l = 510; 
x33.l = 510; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
