*  NLP written by GAMS Convert at 10/06/06 11:33:37
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*         13        1        7        5        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        101      101        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        201      136       65        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
          ,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
          ,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,objvar;

Negative Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17
          ,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34
          ,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51
          ,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68
          ,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85
          ,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13;


e1..    x1 + x21 + x41 + x61 + x81 =G= 30;

e2..    x6 + x26 + x46 + x66 + x86 =G= 100;

e3..    x10 + x30 + x50 + x70 + x90 =G= 40;

e4..    x14 + x34 + x54 + x74 + x94 =G= 50;

e5..    x15 + x35 + x55 + x75 + x95 =G= 70;

e6..    x16 + x36 + x56 + x76 + x96 =G= 35;

e7..    x20 + x40 + x60 + x80 + x100 =G= 10;

e8..    x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13
      + x14 + x15 + x16 + x17 + x18 + x19 + x20 =L= 200;

e9..    x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32
      + x33 + x34 + x35 + x36 + x37 + x38 + x39 + x40 =L= 100;

e10..    x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52
       + x53 + x54 + x55 + x56 + x57 + x58 + x59 + x60 =L= 300;

e11..    x61 + x62 + x63 + x64 + x65 + x66 + x67 + x68 + x69 + x70 + x71 + x72
       + x73 + x74 + x75 + x76 + x77 + x78 + x79 + x80 =L= 150;

e12..    x81 + x82 + x83 + x84 + x85 + x86 + x87 + x88 + x89 + x90 + x91 + x92
       + x93 + x94 + x95 + x96 + x97 + x98 + x99 + x100 =L= 250;

e13..  - (60*exp(-0.174353387144778*x21)*exp(-0.0408219945202552*x41)*exp(-
      0.083381608939051*x81) + 50*exp(-0.0512932943875506*x2)*exp(-
      0.186329578191493*x22)*exp(-0.0512932943875506*x42)*exp(-
      0.0618754037180875*x82) + 50*exp(-0.162518929497775*x23)*exp(-
      0.0512932943875506*x43)*exp(-0.083381608939051*x83) + 75*exp(-
      0.174353387144778*x24)*exp(-0.0408219945202552*x44)*exp(-
      0.0512932943875506*x84) + 40*exp(-0.162518929497775*x25)*exp(-
      0.0408219945202552*x45)*exp(-0.0512932943875506*x85) + 60*exp(-
      0.162518929497775*x6)*exp(-0.210721031315653*x26)*exp(-0.105360515657826*
      x46)*exp(-0.0202027073175195*x86) + 35*exp(-0.105360515657826*x7)*exp(-
      0.210721031315653*x27)*exp(-0.083381608939051*x47)*exp(-
      0.0202027073175195*x87) + 30*exp(-0.162518929497775*x8)*exp(-
      0.198450938723838*x28)*exp(-0.0943106794712413*x48) + 25*exp(-
      0.22314355131421*x9)*exp(-0.22314355131421*x29)*exp(-0.083381608939051*
      x49) + 150*exp(-0.150822889734584*x30)*exp(-0.0512932943875506*x50)*exp(-
      0.0408219945202552*x70)*exp(-0.105360515657826*x90) + 30*exp(-
      0.0100503358535015*x51)*exp(-0.0943106794712413*x71)*exp(-
      0.0512932943875506*x91) + 45*exp(-0.0202027073175195*x32)*exp(-
      0.0202027073175195*x52)*exp(-0.083381608939051*x72)*exp(-
      0.0408219945202552*x92) + 125*exp(-0.0100503358535015*x53)*exp(-
      0.0943106794712413*x73)*exp(-0.0943106794712413*x93) + 200*exp(-
      0.127833371509885*x34)*exp(-0.0202027073175195*x54)*exp(-
      0.083381608939051*x74)*exp(-0.0202027073175195*x94) + 200*exp(-
      0.139262067333508*x35)*exp(-0.0304592074847086*x55)*exp(-
      0.0202027073175195*x75)*exp(-0.0100503358535015*x95) + 130*exp(-
      0.127833371509885*x36)*exp(-0.0202027073175195*x56)*exp(-
      0.0725706928348354*x76)*exp(-0.0100503358535015*x96) + 100*exp(-
      0.162518929497775*x37)*exp(-0.0512932943875506*x57) + 100*exp(-
      0.0512932943875506*x18)*exp(-0.174353387144778*x38)*exp(-
      0.083381608939051*x58) + 100*exp(-0.162518929497775*x39)*exp(-
      0.0725706928348354*x59) + 150*exp(-0.162518929497775*x40)*exp(-
      0.083381608939051*x60)) + objvar =E= -1755;

* set non default bounds

x1.up = 1000; 
x2.up = 1000; 
x3.up = 1000; 
x4.up = 1000; 
x5.up = 1000; 
x6.up = 1000; 
x7.up = 1000; 
x8.up = 1000; 
x9.up = 1000; 
x10.up = 1000; 
x11.up = 1000; 
x12.up = 1000; 
x13.up = 1000; 
x14.up = 1000; 
x15.up = 1000; 
x16.up = 1000; 
x17.up = 1000; 
x18.up = 1000; 
x19.up = 1000; 
x20.up = 1000; 
x21.up = 1000; 
x22.up = 1000; 
x23.up = 1000; 
x24.up = 1000; 
x25.up = 1000; 
x26.up = 1000; 
x27.up = 1000; 
x28.up = 1000; 
x29.up = 1000; 
x30.up = 1000; 
x31.up = 1000; 
x32.up = 1000; 
x33.up = 1000; 
x34.up = 1000; 
x35.up = 1000; 
x36.up = 1000; 
x37.up = 1000; 
x38.up = 1000; 
x39.up = 1000; 
x40.up = 1000; 
x41.up = 1000; 
x42.up = 1000; 
x43.up = 1000; 
x44.up = 1000; 
x45.up = 1000; 
x46.up = 1000; 
x47.up = 1000; 
x48.up = 1000; 
x49.up = 1000; 
x50.up = 1000; 
x51.up = 1000; 
x52.up = 1000; 
x53.up = 1000; 
x54.up = 1000; 
x55.up = 1000; 
x56.up = 1000; 
x57.up = 1000; 
x58.up = 1000; 
x59.up = 1000; 
x60.up = 1000; 
x61.up = 1000; 
x62.up = 1000; 
x63.up = 1000; 
x64.up = 1000; 
x65.up = 1000; 
x66.up = 1000; 
x67.up = 1000; 
x68.up = 1000; 
x69.up = 1000; 
x70.up = 1000; 
x71.up = 1000; 
x72.up = 1000; 
x73.up = 1000; 
x74.up = 1000; 
x75.up = 1000; 
x76.up = 1000; 
x77.up = 1000; 
x78.up = 1000; 
x79.up = 1000; 
x80.up = 1000; 
x81.up = 1000; 
x82.up = 1000; 
x83.up = 1000; 
x84.up = 1000; 
x85.up = 1000; 
x86.up = 1000; 
x87.up = 1000; 
x88.up = 1000; 
x89.up = 1000; 
x90.up = 1000; 
x91.up = 1000; 
x92.up = 1000; 
x93.up = 1000; 
x94.up = 1000; 
x95.up = 1000; 
x96.up = 1000; 
x97.up = 1000; 
x98.up = 1000; 
x99.up = 1000; 
x100.up = 1000; 

* set non default levels


* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
