*  NLP written by GAMS Convert at 10/06/06 11:53:54
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*          1        1        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        101      101        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        101        1      100        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
          ,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
          ,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,objvar;

Equations  e1;


e1..  - 1e-7*(sqr((-1) + x1) + sqr((-1) + x2) + sqr((-1) + x3) + sqr((-1) + x4)
      + sqr((-1) + x5) + sqr((-1) + x6) + sqr((-1) + x7) + sqr((-1) + x8) + 
     sqr((-1) + x9) + sqr((-1) + x10) + sqr((-1) + x11) + sqr((-1) + x12) + 
     sqr((-1) + x13) + sqr((-1) + x14) + sqr((-1) + x15) + sqr((-1) + x16) + 
     sqr((-1) + x17) + sqr((-1) + x18) + sqr((-1) + x19) + sqr((-1) + x20) + 
     sqr((-1) + x21) + sqr((-1) + x22) + sqr((-1) + x23) + sqr((-1) + x24) + 
     sqr((-1) + x25) + sqr((-1) + x26) + sqr((-1) + x27) + sqr((-1) + x28) + 
     sqr((-1) + x29) + sqr((-1) + x30) + sqr((-1) + x31) + sqr((-1) + x32) + 
     sqr((-1) + x33) + sqr((-1) + x34) + sqr((-1) + x35) + sqr((-1) + x36) + 
     sqr((-1) + x37) + sqr((-1) + x38) + sqr((-1) + x39) + sqr((-1) + x40) + 
     sqr((-1) + x41) + sqr((-1) + x42) + sqr((-1) + x43) + sqr((-1) + x44) + 
     sqr((-1) + x45) + sqr((-1) + x46) + sqr((-1) + x47) + sqr((-1) + x48) + 
     sqr((-1) + x49) + sqr((-1) + x50) + sqr((-1) + x51) + sqr((-1) + x52) + 
     sqr((-1) + x53) + sqr((-1) + x54) + sqr((-1) + x55) + sqr((-1) + x56) + 
     sqr((-1) + x57) + sqr((-1) + x58) + sqr((-1) + x59) + sqr((-1) + x60) + 
     sqr((-1) + x61) + sqr((-1) + x62) + sqr((-1) + x63) + sqr((-1) + x64) + 
     sqr((-1) + x65) + sqr((-1) + x66) + sqr((-1) + x67) + sqr((-1) + x68) + 
     sqr((-1) + x69) + sqr((-1) + x70) + sqr((-1) + x71) + sqr((-1) + x72) + 
     sqr((-1) + x73) + sqr((-1) + x74) + sqr((-1) + x75) + sqr((-1) + x76) + 
     sqr((-1) + x77) + sqr((-1) + x78) + sqr((-1) + x79) + sqr((-1) + x80) + 
     sqr((-1) + x81) + sqr((-1) + x82) + sqr((-1) + x83) + sqr((-1) + x84) + 
     sqr((-1) + x85) + sqr((-1) + x86) + sqr((-1) + x87) + sqr((-1) + x88) + 
     sqr((-1) + x89) + sqr((-1) + x90) + sqr((-1) + x91) + sqr((-1) + x92) + 
     sqr((-1) + x93) + sqr((-1) + x94) + sqr((-1) + x95) + sqr((-1) + x96) + 
     sqr((-1) + x97) + sqr((-1) + x98) + sqr((-1) + x99) + sqr((-1) + x100) + 
     sqr((-5050) + x1 + 2*x2 + 3*x3 + 4*x4 + 5*x5 + 6*x6 + 7*x7 + 8*x8 + 9*x9
      + 10*x10 + 11*x11 + 12*x12 + 13*x13 + 14*x14 + 15*x15 + 16*x16 + 17*x17
      + 18*x18 + 19*x19 + 20*x20 + 21*x21 + 22*x22 + 23*x23 + 24*x24 + 25*x25
      + 26*x26 + 27*x27 + 28*x28 + 29*x29 + 30*x30 + 31*x31 + 32*x32 + 33*x33
      + 34*x34 + 35*x35 + 36*x36 + 37*x37 + 38*x38 + 39*x39 + 40*x40 + 41*x41
      + 42*x42 + 43*x43 + 44*x44 + 45*x45 + 46*x46 + 47*x47 + 48*x48 + 49*x49
      + 50*x50 + 51*x51 + 52*x52 + 53*x53 + 54*x54 + 55*x55 + 56*x56 + 57*x57
      + 58*x58 + 59*x59 + 60*x60 + 61*x61 + 62*x62 + 63*x63 + 64*x64 + 65*x65
      + 66*x66 + 67*x67 + 68*x68 + 69*x69 + 70*x70 + 71*x71 + 72*x72 + 73*x73
      + 74*x74 + 75*x75 + 76*x76 + 77*x77 + 78*x78 + 79*x79 + 80*x80 + 81*x81
      + 82*x82 + 83*x83 + 84*x84 + 85*x85 + 86*x86 + 87*x87 + 88*x88 + 89*x89
      + 90*x90 + 91*x91 + 92*x92 + 93*x93 + 94*x94 + 95*x95 + 96*x96 + 97*x97
      + 98*x98 + 99*x99 + 100*x100) + sqr(sqr((-5050) + x1 + 2*x2 + 3*x3 + 4*x4
      + 5*x5 + 6*x6 + 7*x7 + 8*x8 + 9*x9 + 10*x10 + 11*x11 + 12*x12 + 13*x13 + 
     14*x14 + 15*x15 + 16*x16 + 17*x17 + 18*x18 + 19*x19 + 20*x20 + 21*x21 + 22
     *x22 + 23*x23 + 24*x24 + 25*x25 + 26*x26 + 27*x27 + 28*x28 + 29*x29 + 30*
     x30 + 31*x31 + 32*x32 + 33*x33 + 34*x34 + 35*x35 + 36*x36 + 37*x37 + 38*
     x38 + 39*x39 + 40*x40 + 41*x41 + 42*x42 + 43*x43 + 44*x44 + 45*x45 + 46*
     x46 + 47*x47 + 48*x48 + 49*x49 + 50*x50 + 51*x51 + 52*x52 + 53*x53 + 54*
     x54 + 55*x55 + 56*x56 + 57*x57 + 58*x58 + 59*x59 + 60*x60 + 61*x61 + 62*
     x62 + 63*x63 + 64*x64 + 65*x65 + 66*x66 + 67*x67 + 68*x68 + 69*x69 + 70*
     x70 + 71*x71 + 72*x72 + 73*x73 + 74*x74 + 75*x75 + 76*x76 + 77*x77 + 78*
     x78 + 79*x79 + 80*x80 + 81*x81 + 82*x82 + 83*x83 + 84*x84 + 85*x85 + 86*
     x86 + 87*x87 + 88*x88 + 89*x89 + 90*x90 + 91*x91 + 92*x92 + 93*x93 + 94*
     x94 + 95*x95 + 96*x96 + 97*x97 + 98*x98 + 99*x99 + 100*x100))) + objvar
      =E= 0;

* set non default bounds


* set non default levels

x1.l = 0.99; 
x2.l = 0.98; 
x3.l = 0.97; 
x4.l = 0.96; 
x5.l = 0.95; 
x6.l = 0.94; 
x7.l = 0.93; 
x8.l = 0.92; 
x9.l = 0.91; 
x10.l = 0.9; 
x11.l = 0.89; 
x12.l = 0.88; 
x13.l = 0.87; 
x14.l = 0.86; 
x15.l = 0.85; 
x16.l = 0.84; 
x17.l = 0.83; 
x18.l = 0.82; 
x19.l = 0.81; 
x20.l = 0.8; 
x21.l = 0.79; 
x22.l = 0.78; 
x23.l = 0.77; 
x24.l = 0.76; 
x25.l = 0.75; 
x26.l = 0.74; 
x27.l = 0.73; 
x28.l = 0.72; 
x29.l = 0.71; 
x30.l = 0.7; 
x31.l = 0.69; 
x32.l = 0.68; 
x33.l = 0.67; 
x34.l = 0.66; 
x35.l = 0.65; 
x36.l = 0.64; 
x37.l = 0.63; 
x38.l = 0.62; 
x39.l = 0.61; 
x40.l = 0.6; 
x41.l = 0.59; 
x42.l = 0.58; 
x43.l = 0.57; 
x44.l = 0.56; 
x45.l = 0.55; 
x46.l = 0.54; 
x47.l = 0.53; 
x48.l = 0.52; 
x49.l = 0.51; 
x50.l = 0.5; 
x51.l = 0.49; 
x52.l = 0.48; 
x53.l = 0.47; 
x54.l = 0.46; 
x55.l = 0.45; 
x56.l = 0.44; 
x57.l = 0.43; 
x58.l = 0.42; 
x59.l = 0.41; 
x60.l = 0.4; 
x61.l = 0.39; 
x62.l = 0.38; 
x63.l = 0.37; 
x64.l = 0.36; 
x65.l = 0.35; 
x66.l = 0.34; 
x67.l = 0.33; 
x68.l = 0.32; 
x69.l = 0.31; 
x70.l = 0.3; 
x71.l = 0.29; 
x72.l = 0.28; 
x73.l = 0.27; 
x74.l = 0.26; 
x75.l = 0.25; 
x76.l = 0.24; 
x77.l = 0.23; 
x78.l = 0.22; 
x79.l = 0.21; 
x80.l = 0.2; 
x81.l = 0.19; 
x82.l = 0.18; 
x83.l = 0.17; 
x84.l = 0.16; 
x85.l = 0.15; 
x86.l = 0.14; 
x87.l = 0.13; 
x88.l = 0.12; 
x89.l = 0.11; 
x90.l = 0.1; 
x91.l = 0.09; 
x92.l = 0.08; 
x93.l = 0.07; 
x94.l = 0.0600000000000001; 
x95.l = 0.05; 
x96.l = 0.04; 
x97.l = 0.03; 
x98.l = 0.02; 
x99.l = 0.01; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
