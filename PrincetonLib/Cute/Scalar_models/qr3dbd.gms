*  NLP written by GAMS Convert at 10/06/06 11:47:18
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*          1        1        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        128      128        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        128        1      127        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
          ,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
          ,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,x101,x102,x103
          ,x104,x105,x106,x107,x108,x109,x110,x111,x112,x113,x114,x115,x116
          ,x117,x118,x119,x120,x121,x122,x123,x124,x125,x126,x127,objvar;

Positive Variables  x101,x104,x107,x110,x113,x116,x119,x122,x125,x127;

Equations  e1;


e1..  - (sqr((-1) + x1*x1 + x2*x2 + x3*x3 + x4*x4 + x5*x5 + x6*x6 + x7*x7 + x8*
     x8 + x9*x9 + x10*x10) + sqr(x1*x11 + x2*x12 + x3*x13 + x4*x14 + x5*x15 + 
     x6*x16 + x7*x17 + x8*x18 + x9*x19 + x10*x20) + sqr(x1*x21 + x2*x22 + x3*
     x23 + x4*x24 + x5*x25 + x6*x26 + x7*x27 + x8*x28 + x9*x29 + x10*x30) + 
     sqr(x1*x31 + x2*x32 + x3*x33 + x4*x34 + x5*x35 + x6*x36 + x7*x37 + x8*x38
      + x9*x39 + x10*x40) + sqr(x1*x41 + x2*x42 + x3*x43 + x4*x44 + x5*x45 + x6
     *x46 + x7*x47 + x8*x48 + x9*x49 + x10*x50) + sqr(x1*x51 + x2*x52 + x3*x53
      + x4*x54 + x5*x55 + x6*x56 + x7*x57 + x8*x58 + x9*x59 + x10*x60) + sqr(x1
     *x61 + x2*x62 + x3*x63 + x4*x64 + x5*x65 + x6*x66 + x7*x67 + x8*x68 + x9*
     x69 + x10*x70) + sqr(x1*x71 + x2*x72 + x3*x73 + x4*x74 + x5*x75 + x6*x76
      + x7*x77 + x8*x78 + x9*x79 + x10*x80) + sqr(x1*x81 + x2*x82 + x3*x83 + x4
     *x84 + x5*x85 + x6*x86 + x7*x87 + x8*x88 + x9*x89 + x10*x90) + sqr(x1*x91
      + x2*x92 + x3*x93 + x4*x94 + x5*x95 + x6*x96 + x7*x97 + x8*x98 + x9*x99
      + x10*x100) + sqr((-1) + x11*x11 + x12*x12 + x13*x13 + x14*x14 + x15*x15
      + x16*x16 + x17*x17 + x18*x18 + x19*x19 + x20*x20) + sqr(x11*x21 + x12*
     x22 + x13*x23 + x14*x24 + x15*x25 + x16*x26 + x17*x27 + x18*x28 + x19*x29
      + x20*x30) + sqr(x11*x31 + x12*x32 + x13*x33 + x14*x34 + x15*x35 + x16*
     x36 + x17*x37 + x18*x38 + x19*x39 + x20*x40) + sqr(x11*x41 + x12*x42 + x13
     *x43 + x14*x44 + x15*x45 + x16*x46 + x17*x47 + x18*x48 + x19*x49 + x20*x50
     ) + sqr(x11*x51 + x12*x52 + x13*x53 + x14*x54 + x15*x55 + x16*x56 + x17*
     x57 + x18*x58 + x19*x59 + x20*x60) + sqr(x11*x61 + x12*x62 + x13*x63 + x14
     *x64 + x15*x65 + x16*x66 + x17*x67 + x18*x68 + x19*x69 + x20*x70) + sqr(
     x11*x71 + x12*x72 + x13*x73 + x14*x74 + x15*x75 + x16*x76 + x17*x77 + x18*
     x78 + x19*x79 + x20*x80) + sqr(x11*x81 + x12*x82 + x13*x83 + x14*x84 + x15
     *x85 + x16*x86 + x17*x87 + x18*x88 + x19*x89 + x20*x90) + sqr(x11*x91 + 
     x12*x92 + x13*x93 + x14*x94 + x15*x95 + x16*x96 + x17*x97 + x18*x98 + x19*
     x99 + x20*x100) + sqr((-1) + x21*x21 + x22*x22 + x23*x23 + x24*x24 + x25*
     x25 + x26*x26 + x27*x27 + x28*x28 + x29*x29 + x30*x30) + sqr(x21*x31 + x22
     *x32 + x23*x33 + x24*x34 + x25*x35 + x26*x36 + x27*x37 + x28*x38 + x29*x39
      + x30*x40) + sqr(x21*x41 + x22*x42 + x23*x43 + x24*x44 + x25*x45 + x26*
     x46 + x27*x47 + x28*x48 + x29*x49 + x30*x50) + sqr(x21*x51 + x22*x52 + x23
     *x53 + x24*x54 + x25*x55 + x26*x56 + x27*x57 + x28*x58 + x29*x59 + x30*x60
     ) + sqr(x21*x61 + x22*x62 + x23*x63 + x24*x64 + x25*x65 + x26*x66 + x27*
     x67 + x28*x68 + x29*x69 + x30*x70) + sqr(x21*x71 + x22*x72 + x23*x73 + x24
     *x74 + x25*x75 + x26*x76 + x27*x77 + x28*x78 + x29*x79 + x30*x80) + sqr(
     x21*x81 + x22*x82 + x23*x83 + x24*x84 + x25*x85 + x26*x86 + x27*x87 + x28*
     x88 + x29*x89 + x30*x90) + sqr(x21*x91 + x22*x92 + x23*x93 + x24*x94 + x25
     *x95 + x26*x96 + x27*x97 + x28*x98 + x29*x99 + x30*x100) + sqr((-1) + x31*
     x31 + x32*x32 + x33*x33 + x34*x34 + x35*x35 + x36*x36 + x37*x37 + x38*x38
      + x39*x39 + x40*x40) + sqr(x31*x41 + x32*x42 + x33*x43 + x34*x44 + x35*
     x45 + x36*x46 + x37*x47 + x38*x48 + x39*x49 + x40*x50) + sqr(x31*x51 + x32
     *x52 + x33*x53 + x34*x54 + x35*x55 + x36*x56 + x37*x57 + x38*x58 + x39*x59
      + x40*x60) + sqr(x31*x61 + x32*x62 + x33*x63 + x34*x64 + x35*x65 + x36*
     x66 + x37*x67 + x38*x68 + x39*x69 + x40*x70) + sqr(x31*x71 + x32*x72 + x33
     *x73 + x34*x74 + x35*x75 + x36*x76 + x37*x77 + x38*x78 + x39*x79 + x40*x80
     ) + sqr(x31*x81 + x32*x82 + x33*x83 + x34*x84 + x35*x85 + x36*x86 + x37*
     x87 + x38*x88 + x39*x89 + x40*x90) + sqr(x31*x91 + x32*x92 + x33*x93 + x34
     *x94 + x35*x95 + x36*x96 + x37*x97 + x38*x98 + x39*x99 + x40*x100) + sqr((
     -1) + x41*x41 + x42*x42 + x43*x43 + x44*x44 + x45*x45 + x46*x46 + x47*x47
      + x48*x48 + x49*x49 + x50*x50) + sqr(x41*x51 + x42*x52 + x43*x53 + x44*
     x54 + x45*x55 + x46*x56 + x47*x57 + x48*x58 + x49*x59 + x50*x60) + sqr(x41
     *x61 + x42*x62 + x43*x63 + x44*x64 + x45*x65 + x46*x66 + x47*x67 + x48*x68
      + x49*x69 + x50*x70) + sqr(x41*x71 + x42*x72 + x43*x73 + x44*x74 + x45*
     x75 + x46*x76 + x47*x77 + x48*x78 + x49*x79 + x50*x80) + sqr(x41*x81 + x42
     *x82 + x43*x83 + x44*x84 + x45*x85 + x46*x86 + x47*x87 + x48*x88 + x49*x89
      + x50*x90) + sqr(x41*x91 + x42*x92 + x43*x93 + x44*x94 + x45*x95 + x46*
     x96 + x47*x97 + x48*x98 + x49*x99 + x50*x100) + sqr((-1) + x51*x51 + x52*
     x52 + x53*x53 + x54*x54 + x55*x55 + x56*x56 + x57*x57 + x58*x58 + x59*x59
      + x60*x60) + sqr(x51*x61 + x52*x62 + x53*x63 + x54*x64 + x55*x65 + x56*
     x66 + x57*x67 + x58*x68 + x59*x69 + x60*x70) + sqr(x51*x71 + x52*x72 + x53
     *x73 + x54*x74 + x55*x75 + x56*x76 + x57*x77 + x58*x78 + x59*x79 + x60*x80
     ) + sqr(x51*x81 + x52*x82 + x53*x83 + x54*x84 + x55*x85 + x56*x86 + x57*
     x87 + x58*x88 + x59*x89 + x60*x90) + sqr(x51*x91 + x52*x92 + x53*x93 + x54
     *x94 + x55*x95 + x56*x96 + x57*x97 + x58*x98 + x59*x99 + x60*x100) + sqr((
     -1) + x61*x61 + x62*x62 + x63*x63 + x64*x64 + x65*x65 + x66*x66 + x67*x67
      + x68*x68 + x69*x69 + x70*x70) + sqr(x61*x71 + x62*x72 + x63*x73 + x64*
     x74 + x65*x75 + x66*x76 + x67*x77 + x68*x78 + x69*x79 + x70*x80) + sqr(x61
     *x81 + x62*x82 + x63*x83 + x64*x84 + x65*x85 + x66*x86 + x67*x87 + x68*x88
      + x69*x89 + x70*x90) + sqr(x61*x91 + x62*x92 + x63*x93 + x64*x94 + x65*
     x95 + x66*x96 + x67*x97 + x68*x98 + x69*x99 + x70*x100) + sqr((-1) + x71*
     x71 + x72*x72 + x73*x73 + x74*x74 + x75*x75 + x76*x76 + x77*x77 + x78*x78
      + x79*x79 + x80*x80) + sqr(x71*x81 + x72*x82 + x73*x83 + x74*x84 + x75*
     x85 + x76*x86 + x77*x87 + x78*x88 + x79*x89 + x80*x90) + sqr(x71*x91 + x72
     *x92 + x73*x93 + x74*x94 + x75*x95 + x76*x96 + x77*x97 + x78*x98 + x79*x99
      + x80*x100) + sqr((-1) + x81*x81 + x82*x82 + x83*x83 + x84*x84 + x85*x85
      + x86*x86 + x87*x87 + x88*x88 + x89*x89 + x90*x90) + sqr(x81*x91 + x82*
     x92 + x83*x93 + x84*x94 + x85*x95 + x86*x96 + x87*x97 + x88*x98 + x89*x99
      + x90*x100) + sqr((-1) + x91*x91 + x92*x92 + x93*x93 + x94*x94 + x95*x95
      + x96*x96 + x97*x97 + x98*x98 + x99*x99 + x100*x100) + sqr((-0.2) + x1*
     x101) + sqr(x1*x102 + x2*x104) + sqr(x1*x103 + x2*x105 + x3*x107) + sqr(x2
     *x106 + x3*x108 + x4*x110) + sqr(x3*x109 + x4*x111 + x5*x113) + sqr(x4*
     x112 + x5*x114 + x6*x116) + sqr(x5*x115 + x6*x117 + x7*x119) + sqr(x6*x118
      + x7*x120 + x8*x122) + sqr(x7*x121 + x8*x123 + x9*x125) + sqr(x8*x124 + 
     x9*x126 + x10*x127) + sqr(0.1 + x11*x101) + sqr((-0.4) + x11*x102 + x12*
     x104) + sqr(0.1 + x11*x103 + x12*x105 + x13*x107) + sqr(x12*x106 + x13*
     x108 + x14*x110) + sqr(x13*x109 + x14*x111 + x15*x113) + sqr(x14*x112 + 
     x15*x114 + x16*x116) + sqr(x15*x115 + x16*x117 + x17*x119) + sqr(x16*x118
      + x17*x120 + x18*x122) + sqr(x17*x121 + x18*x123 + x19*x125) + sqr(x18*
     x124 + x19*x126 + x20*x127) + sqr(x21*x101) + sqr(0.2 + x21*x102 + x22*
     x104) + sqr((-0.6) + x21*x103 + x22*x105 + x23*x107) + sqr(0.2 + x22*x106
      + x23*x108 + x24*x110) + sqr(x23*x109 + x24*x111 + x25*x113) + sqr(x24*
     x112 + x25*x114 + x26*x116) + sqr(x25*x115 + x26*x117 + x27*x119) + sqr(
     x26*x118 + x27*x120 + x28*x122) + sqr(x27*x121 + x28*x123 + x29*x125) + 
     sqr(x28*x124 + x29*x126 + x30*x127) + sqr(x31*x101) + sqr(x31*x102 + x32*
     x104) + sqr(0.3 + x31*x103 + x32*x105 + x33*x107) + sqr((-0.8) + x32*x106
      + x33*x108 + x34*x110) + sqr(0.3 + x33*x109 + x34*x111 + x35*x113) + sqr(
     x34*x112 + x35*x114 + x36*x116) + sqr(x35*x115 + x36*x117 + x37*x119) + 
     sqr(x36*x118 + x37*x120 + x38*x122) + sqr(x37*x121 + x38*x123 + x39*x125)
      + sqr(x38*x124 + x39*x126 + x40*x127) + sqr(x41*x101) + sqr(x41*x102 + 
     x42*x104) + sqr(x41*x103 + x42*x105 + x43*x107) + sqr(0.4 + x42*x106 + x43
     *x108 + x44*x110) + sqr((-1) + x43*x109 + x44*x111 + x45*x113) + sqr(0.4
      + x44*x112 + x45*x114 + x46*x116) + sqr(x45*x115 + x46*x117 + x47*x119)
      + sqr(x46*x118 + x47*x120 + x48*x122) + sqr(x47*x121 + x48*x123 + x49*
     x125) + sqr(x48*x124 + x49*x126 + x50*x127) + sqr(x51*x101) + sqr(x51*x102
      + x52*x104) + sqr(x51*x103 + x52*x105 + x53*x107) + sqr(x52*x106 + x53*
     x108 + x54*x110) + sqr(0.5 + x53*x109 + x54*x111 + x55*x113) + sqr((-1.2)
      + x54*x112 + x55*x114 + x56*x116) + sqr(0.5 + x55*x115 + x56*x117 + x57*
     x119) + sqr(x56*x118 + x57*x120 + x58*x122) + sqr(x57*x121 + x58*x123 + 
     x59*x125) + sqr(x58*x124 + x59*x126 + x60*x127) + sqr(x61*x101) + sqr(x61*
     x102 + x62*x104) + sqr(x61*x103 + x62*x105 + x63*x107) + sqr(x62*x106 + 
     x63*x108 + x64*x110) + sqr(x63*x109 + x64*x111 + x65*x113) + sqr(0.6 + x64
     *x112 + x65*x114 + x66*x116) + sqr((-1.4) + x65*x115 + x66*x117 + x67*x119
     ) + sqr(0.6 + x66*x118 + x67*x120 + x68*x122) + sqr(x67*x121 + x68*x123 + 
     x69*x125) + sqr(x68*x124 + x69*x126 + x70*x127) + sqr(x71*x101) + sqr(x71*
     x102 + x72*x104) + sqr(x71*x103 + x72*x105 + x73*x107) + sqr(x72*x106 + 
     x73*x108 + x74*x110) + sqr(x73*x109 + x74*x111 + x75*x113) + sqr(x74*x112
      + x75*x114 + x76*x116) + sqr(0.7 + x75*x115 + x76*x117 + x77*x119) + sqr(
     (-1.6) + x76*x118 + x77*x120 + x78*x122) + sqr(0.7 + x77*x121 + x78*x123
      + x79*x125) + sqr(x78*x124 + x79*x126 + x80*x127) + sqr(x81*x101) + sqr(
     x81*x102 + x82*x104) + sqr(x81*x103 + x82*x105 + x83*x107) + sqr(x82*x106
      + x83*x108 + x84*x110) + sqr(x83*x109 + x84*x111 + x85*x113) + sqr(x84*
     x112 + x85*x114 + x86*x116) + sqr(x85*x115 + x86*x117 + x87*x119) + sqr(
     0.8 + x86*x118 + x87*x120 + x88*x122) + sqr((-1.8) + x87*x121 + x88*x123
      + x89*x125) + sqr(0.8 + x88*x124 + x89*x126 + x90*x127) + sqr(x91*x101)
      + sqr(x91*x102 + x92*x104) + sqr(x91*x103 + x92*x105 + x93*x107) + sqr(
     x92*x106 + x93*x108 + x94*x110) + sqr(x93*x109 + x94*x111 + x95*x113) + 
     sqr(x94*x112 + x95*x114 + x96*x116) + sqr(x95*x115 + x96*x117 + x97*x119)
      + sqr(x96*x118 + x97*x120 + x98*x122) + sqr(0.9 + x97*x121 + x98*x123 + 
     x99*x125) + sqr((-20) + x98*x124 + x99*x126 + x100*x127)) + objvar =E= 0;

* set non default bounds


* set non default levels

x1.l = 1; 
x12.l = 1; 
x23.l = 1; 
x34.l = 1; 
x45.l = 1; 
x56.l = 1; 
x67.l = 1; 
x78.l = 1; 
x89.l = 1; 
x100.l = 1; 
x101.l = 0.2; 
x104.l = 0.4; 
x105.l = -0.1; 
x107.l = 0.6; 
x108.l = -0.2; 
x110.l = 0.8; 
x111.l = -0.3; 
x113.l = 1; 
x114.l = -0.4; 
x116.l = 1.2; 
x117.l = -0.5; 
x119.l = 1.4; 
x120.l = -0.6; 
x122.l = 1.6; 
x123.l = -0.7; 
x125.l = 1.8; 
x126.l = -0.8; 
x127.l = 20; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
