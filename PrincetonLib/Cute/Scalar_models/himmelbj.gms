*  NLP written by GAMS Convert at 10/06/06 11:33:37
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*         17       17        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        127      127        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        215       89      126        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
          ,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
          ,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,x101,x102,x103
          ,x104,x105,x106,x107,x108,x109,x110,x111,x112,x113,x114,x115,x116
          ,x117,x118,x119,x120,x121,x122,x123,x124,x125,x126,objvar;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17;


e1..    x1 + x19 + x37 + x51 + 2*x52 + 3*x53 + 4*x54 =E= 0.652981;

e2..    x2 + x20 + x28 + x29 + x30 + x38 + x46 + x47 + x48 + x92 + x110
      =E= 0.281941;

e3..    x3 + x21 + x39 =E= 3.705233;

e4..    x4 + x22 + x27 + x29 - x30 + x40 + x45 + x47 - x48 + x55 - x57 + x73
      - x75 - x92 - x110 =E= 47.00022;

e5..    x4 + x23 + x27 + x28 + x29 + x30 + x41 + x45 + x46 + x47 + x48
      =E= 47.02972;

e6..    x24 + x42 =E= 0.08005;

e7..    x25 + x43 =E= 0.08813;

e8..    x26 + x44 =E= 0.04829;

e9..    x50 + x51 + x52 + x53 + x54 =E= 0.0022725;

e10..    x22 - x23 - x24 + x25 + x26 + x28 - 2*x30 - x31 - 4*x50 - 3*x51
       - 2*x52 - x53 =E= 0;

e11..  - x51 - 2*x52 - 3*x53 - 4*x54 + x55 + x56 + x57 =E= 0;

e12..    x73 + x74 + x75 =E= 0;

e13..  - 4*x57 + x91 + x92 =E= 0;

e14..  - 4*x75 + x109 + x110 =E= 0;

e15..    x31 =E= 0.0155;

e16..    x49 =E= 0.0211275;

e17..  - (log(x1)*x1 + log(x2)*x2 + log(x3)*x3 + log(x4)*x4 + log(x19)*x19 + 
      log(x20)*x20 + log(x21)*x21 + log(x22)*x22 + log(x23)*x23 + log(x24)*x24
       + log(x25)*x25 + log(x26)*x26 + log(x27)*x27 + log(x28)*x28 + log(x29)*
      x29 + log(x30)*x30 + log(x31)*x31 + log(x37)*x37 + log(x38)*x38 + log(x39
      )*x39 + log(x40)*x40 + log(x41)*x41 + log(x42)*x42 + log(x43)*x43 + log(
      x44)*x44 + log(x45)*x45 + log(x46)*x46 + log(x47)*x47 + log(x48)*x48 + 
      log(x49)*x49 + log(x50)*x50 + log(x51)*x51 + log(x52)*x52 + log(x53)*x53
       + log(x54)*x54 + log(x55)*x55 + log(x56)*x56 + log(x57)*x57 + log(x73)*
      x73 + log(x74)*x74 + log(x75)*x75 + log(x91)*x91 + log(x92)*x92 + log(
      x109)*x109 + log(x110)*x110 - 7.69*x2 - 11.52*x3 - 36.6*x4 - 10.94*x19 + 
      2.5966*x26 - 39.39*x27 - 21.35*x28 - 32.84*x29 + 6.26*x30 + 10.45*x37 - 
      0.5*x39 + 2.2435*x43 - 39.39*x45 - 21.49*x46 - 32.84*x47 + 6.12*x48 - 
      1.9028*x51 - 2.8889*x52 - 3.3622*x53 - 7.4854*x54 - 15.639*x55 + 21.81*
      x57 - 16.79*x73 + 18.9779*x75 + 11.959*x92 + 12.899*x110 - (log(x1 + x2
       + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + x15
       + x16 + x17 + x18)*x1 + log(x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
       + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18)*x2 + log(x1 + x2
       + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + x15
       + x16 + x17 + x18)*x3 + log(x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
       + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18)*x4) - (log(x19 + 
      x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + 
      x32 + x33 + x34 + x35 + x36)*x19 + log(x19 + x20 + x21 + x22 + x23 + x24
       + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)
      *x20 + log(x19 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + 
      x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)*x21 + log(x19 + x20 + x21
       + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33
       + x34 + x35 + x36)*x22 + log(x19 + x20 + x21 + x22 + x23 + x24 + x25 + 
      x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)*x23 + 
      log(x19 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30
       + x31 + x32 + x33 + x34 + x35 + x36)*x24 + log(x19 + x20 + x21 + x22 + 
      x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + 
      x35 + x36)*x25 + log(x19 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27
       + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)*x26 + log(x19 + 
      x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + 
      x32 + x33 + x34 + x35 + x36)*x27 + log(x19 + x20 + x21 + x22 + x23 + x24
       + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)
      *x28 + log(x19 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + 
      x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)*x29 + log(x19 + x20 + x21
       + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33
       + x34 + x35 + x36)*x30 + log(x19 + x20 + x21 + x22 + x23 + x24 + x25 + 
      x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36)*x31) - (
      log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48
       + x49 + x50 + x51 + x52 + x53 + x54)*x37 + log(x37 + x38 + x39 + x40 + 
      x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + 
      x53 + x54)*x38 + log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45
       + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)*x39 + log(x37 + 
      x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + 
      x50 + x51 + x52 + x53 + x54)*x40 + log(x37 + x38 + x39 + x40 + x41 + x42
       + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)
      *x41 + log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + 
      x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)*x42 + log(x37 + x38 + x39
       + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51
       + x52 + x53 + x54)*x43 + log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + 
      x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)*x44 + 
      log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48
       + x49 + x50 + x51 + x52 + x53 + x54)*x45 + log(x37 + x38 + x39 + x40 + 
      x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + 
      x53 + x54)*x46 + log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45
       + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)*x47 + log(x37 + 
      x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + 
      x50 + x51 + x52 + x53 + x54)*x48 + log(x37 + x38 + x39 + x40 + x41 + x42
       + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)
      *x49 + log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + 
      x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)*x50 + log(x37 + x38 + x39
       + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51
       + x52 + x53 + x54)*x51 + log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + 
      x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54)*x52 + 
      log(x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48
       + x49 + x50 + x51 + x52 + x53 + x54)*x53 + log(x37 + x38 + x39 + x40 + 
      x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + 
      x53 + x54)*x54) - (log(x55 + x56 + x57 + x58 + x59 + x60 + x61 + x62 + 
      x63 + x64 + x65 + x66 + x67 + x68 + x69 + x70 + x71 + x72)*x55 + log(x55
       + x56 + x57 + x58 + x59 + x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67
       + x68 + x69 + x70 + x71 + x72)*x56 + log(x55 + x56 + x57 + x58 + x59 + 
      x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 + x68 + x69 + x70 + x71 + 
      x72)*x57) - (log(x73 + x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 + 
      x82 + x83 + x84 + x85 + x86 + x87 + x88 + x89 + x90)*x73 + log(x73 + x74
       + x75 + x76 + x77 + x78 + x79 + x80 + x81 + x82 + x83 + x84 + x85 + x86
       + x87 + x88 + x89 + x90)*x74 + log(x73 + x74 + x75 + x76 + x77 + x78 + 
      x79 + x80 + x81 + x82 + x83 + x84 + x85 + x86 + x87 + x88 + x89 + x90)*
      x75) - (log(x91 + x92 + x93 + x94 + x95 + x96 + x97 + x98 + x99 + x100 + 
      x101 + x102 + x103 + x104 + x105 + x106 + x107 + x108)*x91 + log(x91 + 
      x92 + x93 + x94 + x95 + x96 + x97 + x98 + x99 + x100 + x101 + x102 + x103
       + x104 + x105 + x106 + x107 + x108)*x92) - (log(x109 + x110 + x111 + 
      x112 + x113 + x114 + x115 + x116 + x117 + x118 + x119 + x120 + x121 + 
      x122 + x123 + x124 + x125 + x126)*x109 + log(x109 + x110 + x111 + x112 + 
      x113 + x114 + x115 + x116 + x117 + x118 + x119 + x120 + x121 + x122 + 
      x123 + x124 + x125 + x126)*x110)) + objvar =E= 0;

* set non default bounds

x1.lo = 1E-22; x1.up = 20; 
x2.lo = 1E-22; x2.up = 20; 
x3.lo = 1E-22; x3.up = 20; 
x4.lo = 1E-22; x4.up = 20; 
x5.lo = 1E-22; x5.up = 20; 
x6.lo = 1E-22; x6.up = 20; 
x7.lo = 1E-22; x7.up = 20; 
x8.lo = 1E-22; x8.up = 20; 
x9.lo = 1E-22; x9.up = 20; 
x10.lo = 1E-22; x10.up = 20; 
x11.lo = 1E-22; x11.up = 20; 
x12.lo = 1E-22; x12.up = 20; 
x13.lo = 1E-22; x13.up = 20; 
x14.lo = 1E-22; x14.up = 20; 
x15.lo = 1E-22; x15.up = 20; 
x16.lo = 1E-22; x16.up = 20; 
x17.lo = 1E-22; x17.up = 20; 
x18.lo = 1E-22; x18.up = 20; 
x19.lo = 1E-22; x19.up = 20; 
x20.lo = 1E-22; x20.up = 20; 
x21.lo = 1E-22; x21.up = 20; 
x22.lo = 1E-22; x22.up = 20; 
x23.lo = 1E-22; x23.up = 20; 
x24.lo = 1E-22; x24.up = 20; 
x25.lo = 1E-22; x25.up = 20; 
x26.lo = 1E-22; x26.up = 20; 
x27.lo = 1E-22; x27.up = 20; 
x28.lo = 1E-22; x28.up = 20; 
x29.lo = 1E-22; x29.up = 20; 
x30.lo = 1E-22; x30.up = 20; 
x31.lo = 1E-22; x31.up = 20; 
x32.lo = 1E-22; x32.up = 20; 
x33.lo = 1E-22; x33.up = 20; 
x34.lo = 1E-22; x34.up = 20; 
x35.lo = 1E-22; x35.up = 20; 
x36.lo = 1E-22; x36.up = 20; 
x37.lo = 1E-22; x37.up = 20; 
x38.lo = 1E-22; x38.up = 20; 
x39.lo = 1E-22; x39.up = 20; 
x40.lo = 1E-22; x40.up = 20; 
x41.lo = 1E-22; x41.up = 20; 
x42.lo = 1E-22; x42.up = 20; 
x43.lo = 1E-22; x43.up = 20; 
x44.lo = 1E-22; x44.up = 20; 
x45.lo = 1E-22; x45.up = 20; 
x46.lo = 1E-22; x46.up = 20; 
x47.lo = 1E-22; x47.up = 20; 
x48.lo = 1E-22; x48.up = 20; 
x49.lo = 1E-22; x49.up = 20; 
x50.lo = 1E-22; x50.up = 20; 
x51.lo = 1E-22; x51.up = 20; 
x52.lo = 1E-22; x52.up = 20; 
x53.lo = 1E-22; x53.up = 20; 
x54.lo = 1E-22; x54.up = 20; 
x55.lo = 1E-22; x55.up = 20; 
x56.lo = 1E-22; x56.up = 20; 
x57.lo = 1E-22; x57.up = 20; 
x58.lo = 1E-22; x58.up = 20; 
x59.lo = 1E-22; x59.up = 20; 
x60.lo = 1E-22; x60.up = 20; 
x61.lo = 1E-22; x61.up = 20; 
x62.lo = 1E-22; x62.up = 20; 
x63.lo = 1E-22; x63.up = 20; 
x64.lo = 1E-22; x64.up = 20; 
x65.lo = 1E-22; x65.up = 20; 
x66.lo = 1E-22; x66.up = 20; 
x67.lo = 1E-22; x67.up = 20; 
x68.lo = 1E-22; x68.up = 20; 
x69.lo = 1E-22; x69.up = 20; 
x70.lo = 1E-22; x70.up = 20; 
x71.lo = 1E-22; x71.up = 20; 
x72.lo = 1E-22; x72.up = 20; 
x73.lo = 1E-22; x73.up = 20; 
x74.lo = 1E-22; x74.up = 20; 
x75.lo = 1E-22; x75.up = 20; 
x76.lo = 1E-22; x76.up = 20; 
x77.lo = 1E-22; x77.up = 20; 
x78.lo = 1E-22; x78.up = 20; 
x79.lo = 1E-22; x79.up = 20; 
x80.lo = 1E-22; x80.up = 20; 
x81.lo = 1E-22; x81.up = 20; 
x82.lo = 1E-22; x82.up = 20; 
x83.lo = 1E-22; x83.up = 20; 
x84.lo = 1E-22; x84.up = 20; 
x85.lo = 1E-22; x85.up = 20; 
x86.lo = 1E-22; x86.up = 20; 
x87.lo = 1E-22; x87.up = 20; 
x88.lo = 1E-22; x88.up = 20; 
x89.lo = 1E-22; x89.up = 20; 
x90.lo = 1E-22; x90.up = 20; 
x91.lo = 1E-22; x91.up = 20; 
x92.lo = 1E-22; x92.up = 20; 
x93.lo = 1E-22; x93.up = 20; 
x94.lo = 1E-22; x94.up = 20; 
x95.lo = 1E-22; x95.up = 20; 
x96.lo = 1E-22; x96.up = 20; 
x97.lo = 1E-22; x97.up = 20; 
x98.lo = 1E-22; x98.up = 20; 
x99.lo = 1E-22; x99.up = 20; 
x100.lo = 1E-22; x100.up = 20; 
x101.lo = 1E-22; x101.up = 20; 
x102.lo = 1E-22; x102.up = 20; 
x103.lo = 1E-22; x103.up = 20; 
x104.lo = 1E-22; x104.up = 20; 
x105.lo = 1E-22; x105.up = 20; 
x106.lo = 1E-22; x106.up = 20; 
x107.lo = 1E-22; x107.up = 20; 
x108.lo = 1E-22; x108.up = 20; 
x109.lo = 1E-22; x109.up = 20; 
x110.lo = 1E-22; x110.up = 20; 
x111.lo = 1E-22; x111.up = 20; 
x112.lo = 1E-22; x112.up = 20; 
x113.lo = 1E-22; x113.up = 20; 
x114.lo = 1E-22; x114.up = 20; 
x115.lo = 1E-22; x115.up = 20; 
x116.lo = 1E-22; x116.up = 20; 
x117.lo = 1E-22; x117.up = 20; 
x118.lo = 1E-22; x118.up = 20; 
x119.lo = 1E-22; x119.up = 20; 
x120.lo = 1E-22; x120.up = 20; 
x121.lo = 1E-22; x121.up = 20; 
x122.lo = 1E-22; x122.up = 20; 
x123.lo = 1E-22; x123.up = 20; 
x124.lo = 1E-22; x124.up = 20; 
x125.lo = 1E-22; x125.up = 20; 
x126.lo = 1E-22; x126.up = 20; 

* set non default levels

x1.l = 1; 
x2.l = 1; 
x3.l = 1; 
x4.l = 1; 
x5.l = 1; 
x6.l = 1; 
x7.l = 1; 
x8.l = 1; 
x9.l = 1; 
x10.l = 1; 
x11.l = 1; 
x12.l = 1; 
x13.l = 1; 
x14.l = 1; 
x15.l = 1; 
x16.l = 1; 
x17.l = 1; 
x18.l = 1; 
x19.l = 1; 
x20.l = 1; 
x21.l = 1; 
x22.l = 1; 
x23.l = 1; 
x24.l = 1; 
x25.l = 1; 
x26.l = 1; 
x27.l = 1; 
x28.l = 1; 
x29.l = 1; 
x30.l = 1; 
x31.l = 1; 
x32.l = 1; 
x33.l = 1; 
x34.l = 1; 
x35.l = 1; 
x36.l = 1; 
x37.l = 1; 
x38.l = 1; 
x39.l = 1; 
x40.l = 1; 
x41.l = 1; 
x42.l = 1; 
x43.l = 1; 
x44.l = 1; 
x45.l = 1; 
x46.l = 1; 
x47.l = 1; 
x48.l = 1; 
x49.l = 1; 
x50.l = 1; 
x51.l = 1; 
x52.l = 1; 
x53.l = 1; 
x54.l = 1; 
x55.l = 1; 
x56.l = 1; 
x57.l = 1; 
x58.l = 1; 
x59.l = 1; 
x60.l = 1; 
x61.l = 1; 
x62.l = 1; 
x63.l = 1; 
x64.l = 1; 
x65.l = 1; 
x66.l = 1; 
x67.l = 1; 
x68.l = 1; 
x69.l = 1; 
x70.l = 1; 
x71.l = 1; 
x72.l = 1; 
x73.l = 1; 
x74.l = 1; 
x75.l = 1; 
x76.l = 1; 
x77.l = 1; 
x78.l = 1; 
x79.l = 1; 
x80.l = 1; 
x81.l = 1; 
x82.l = 1; 
x83.l = 1; 
x84.l = 1; 
x85.l = 1; 
x86.l = 1; 
x87.l = 1; 
x88.l = 1; 
x89.l = 1; 
x90.l = 1; 
x91.l = 1; 
x92.l = 1; 
x93.l = 1; 
x94.l = 1; 
x95.l = 1; 
x96.l = 1; 
x97.l = 1; 
x98.l = 1; 
x99.l = 1; 
x100.l = 1; 
x101.l = 1; 
x102.l = 1; 
x103.l = 1; 
x104.l = 1; 
x105.l = 1; 
x106.l = 1; 
x107.l = 1; 
x108.l = 1; 
x109.l = 1; 
x110.l = 1; 
x111.l = 1; 
x112.l = 1; 
x113.l = 1; 
x114.l = 1; 
x115.l = 1; 
x116.l = 1; 
x117.l = 1; 
x118.l = 1; 
x119.l = 1; 
x120.l = 1; 
x121.l = 1; 
x122.l = 1; 
x123.l = 1; 
x124.l = 1; 
x125.l = 1; 
x126.l = 1; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
