*  NLP written by GAMS Convert at 06/18/05 10:42:30
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*          5        5        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         10       10        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*         28        1       27        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,objvar;

Equations  e1,e2,e3,e4,e5;


e1.. x1*x1 + x2*x2 + x3*x3 =E= 1;

e2.. x4*x4 + x5*x5 + x6*x6 =E= 1;

e3.. x1*x4 + x2*x5 + x3*x6 =E= 0;

e4.. x4*x1 + x5*x2 + x6*x3 =E= 0;

e5..  - (sqr((-0.362495170917953) - x7)*x1 + sqr(0.293343952671003 - x8)*x2 + 
     sqr((-0.971598271733424) - x9)*x3 + sqr((-0.362495170917953) - x7)*x4 + 
     sqr(0.293343952671003 - x8)*x5 + sqr((-0.971598271733424) - x9)*x6 + sqr((
     -0.314891214911083) - x7)*x1 + sqr(0.339335403139788 - x8)*x2 + sqr((-
     0.759296759067223) - x9)*x3 + sqr((-0.314891214911083) - x7)*x4 + sqr(
     0.339335403139788 - x8)*x5 + sqr((-0.759296759067223) - x9)*x6 + sqr((-
     0.30981779086445) - x7)*x1 + sqr(0.313779434378402 - x8)*x2 + sqr(
     0.343866734864445 - x9)*x3 + sqr((-0.30981779086445) - x7)*x4 + sqr(
     0.313779434378402 - x8)*x5 + sqr(0.343866734864445 - x9)*x6 + sqr((-
     0.334161108032512) - x7)*x1 + sqr(0.279125447489466 - x8)*x2 + sqr(
     1.88353527371645 - x9)*x3 + sqr((-0.334161108032512) - x7)*x4 + sqr(
     0.279125447489466 - x8)*x5 + sqr(1.88353527371645 - x9)*x6 + sqr((-
     0.334180701031285) - x7)*x1 + sqr(0.244478366416519 - x8)*x2 + sqr((-
     1.37547395903746) - x9)*x3 + sqr((-0.334180701031285) - x7)*x4 + sqr(
     0.244478366416519 - x8)*x5 + sqr((-1.37547395903746) - x9)*x6 + sqr((-
     0.310490143857947) - x7)*x1 + sqr(0.331547544379238 - x8)*x2 + sqr((-
     1.15320888763318) - x9)*x3 + sqr((-0.310490143857947) - x7)*x4 + sqr(
     0.331547544379238 - x8)*x5 + sqr((-1.15320888763318) - x9)*x6 + sqr((-
     0.233203102005887) - x7)*x1 + sqr(0.381680331194109 - x8)*x2 + sqr((-
     0.724070400973414) - x9)*x3 + sqr((-0.233203102005887) - x7)*x4 + sqr(
     0.381680331194109 - x8)*x5 + sqr((-0.724070400973414) - x9)*x6 + sqr((-
     0.378226025631001) - x7)*x1 + sqr(0.297263691208249 - x8)*x2 + sqr((-
     0.994592146806168) - x9)*x3 + sqr((-0.378226025631001) - x7)*x4 + sqr(
     0.297263691208249 - x8)*x5 + sqr((-0.994592146806168) - x9)*x6 + sqr((-
     0.348748867409573) - x7)*x1 + sqr(0.347659808041416 - x8)*x2 + sqr(
     1.57098561921639 - x9)*x3 + sqr((-0.348748867409573) - x7)*x4 + sqr(
     0.347659808041416 - x8)*x5 + sqr(1.57098561921639 - x9)*x6 + sqr((-
     0.159887220995816) - x7)*x1 + sqr(0.269828144100413 - x8)*x2 + sqr((-
     0.218174284515045) - x9)*x3 + sqr((-0.159887220995816) - x7)*x4 + sqr(
     0.269828144100413 - x8)*x5 + sqr((-0.218174284515045) - x9)*x6 + sqr((-
     0.33686169809354) - x7)*x1 + sqr(0.311895838201148 - x8)*x2 + sqr((-
     0.262606845513057) - x9)*x3 + sqr((-0.33686169809354) - x7)*x4 + sqr(
     0.311895838201148 - x8)*x5 + sqr((-0.262606845513057) - x9)*x6 + sqr((-
     0.326012953930913) - x7)*x1 + sqr(0.246607932730136 - x8)*x2 + sqr(
     1.98203409295263 - x9)*x3 + sqr((-0.326012953930913) - x7)*x4 + sqr(
     0.246607932730136 - x8)*x5 + sqr(1.98203409295263 - x9)*x6 + sqr((-
     0.235870641117781) - x7)*x1 + sqr(0.373681823824468 - x8)*x2 + sqr((-
     0.752264185266621) - x9)*x3 + sqr((-0.235870641117781) - x7)*x4 + sqr(
     0.373681823824468 - x8)*x5 + sqr((-0.752264185266621) - x9)*x6 + sqr((-
     0.259173217400973) - x7)*x1 + sqr(0.371885873436708 - x8)*x2 + sqr(
     0.843537851675487 - x9)*x3 + sqr((-0.259173217400973) - x7)*x4 + sqr(
     0.371885873436708 - x8)*x5 + sqr(0.843537851675487 - x9)*x6 + sqr((-
     0.331134723979505) - x7)*x1 + sqr(0.355888186968682 - x8)*x2 + sqr(
     0.67338903155342 - x9)*x3 + sqr((-0.331134723979505) - x7)*x4 + sqr(
     0.355888186968682 - x8)*x5 + sqr(0.67338903155342 - x9)*x6 + sqr((-
     0.281661336370684) - x7)*x1 + sqr(0.414484379551571 - x8)*x2 + sqr(
     1.26769122418522 - x9)*x3 + sqr((-0.281661336370684) - x7)*x4 + sqr(
     0.414484379551571 - x8)*x5 + sqr(1.26769122418522 - x9)*x6 + sqr((-
     0.202354697781567) - x7)*x1 + sqr(0.245117025060564 - x8)*x2 + sqr((-
     1.5939849451946) - x9)*x3 + sqr((-0.202354697781567) - x7)*x4 + sqr(
     0.245117025060564 - x8)*x5 + sqr((-1.5939849451946) - x9)*x6 + sqr((-
     0.319551133703855) - x7)*x1 + sqr(0.313625770708609 - x8)*x2 + sqr((-
     0.543445381850842) - x9)*x3 + sqr((-0.319551133703855) - x7)*x4 + sqr(
     0.313625770708609 - x8)*x5 + sqr((-0.543445381850842) - x9)*x6 + sqr((-
     0.155850649071239) - x7)*x1 + sqr(0.25775157320127 - x8)*x2 + sqr((-
     0.713516388434362) - x9)*x3 + sqr((-0.155850649071239) - x7)*x4 + sqr(
     0.25775157320127 - x8)*x5 + sqr((-0.713516388434362) - x9)*x6 + sqr((-
     0.304576566694759) - x7)*x1 + sqr(0.317398753412039 - x8)*x2 + sqr((-
     1.7605082114828) - x9)*x3 + sqr((-0.304576566694759) - x7)*x4 + sqr(
     0.317398753412039 - x8)*x5 + sqr((-1.7605082114828) - x9)*x6 + sqr((-
     0.292248443972072) - x7)*x1 + sqr(0.284228121402996 - x8)*x2 + sqr((-
     0.294661397524564) - x9)*x3 + sqr((-0.292248443972072) - x7)*x4 + sqr(
     0.284228121402996 - x8)*x5 + sqr((-0.294661397524564) - x9)*x6 + sqr((-
     0.376980602053093) - x7)*x1 + sqr(0.207111221107938 - x8)*x2 + sqr((-
     0.0563072421474938) - x9)*x3 + sqr((-0.376980602053093) - x7)*x4 + sqr(
     0.207111221107938 - x8)*x5 + sqr((-0.0563072421474938) - x9)*x6 + sqr((-
     0.270432830414563) - x7)*x1 + sqr(0.240726063750643 - x8)*x2 + sqr(
     1.29408020641401 - x9)*x3 + sqr((-0.270432830414563) - x7)*x4 + sqr(
     0.240726063750643 - x8)*x5 + sqr(1.29408020641401 - x9)*x6 + sqr((-
     0.310950522762625) - x7)*x1 + sqr(0.336727724536746 - x8)*x2 + sqr((-
     0.566939617089715) - x9)*x3 + sqr((-0.310950522762625) - x7)*x4 + sqr(
     0.336727724536746 - x8)*x5 + sqr((-0.566939617089715) - x9)*x6 + sqr((-
     0.293604928165698) - x7)*x1 + sqr(0.299144506677769 - x8)*x2 + sqr(
     0.108550944645801 - x9)*x3 + sqr((-0.293604928165698) - x7)*x4 + sqr(
     0.299144506677769 - x8)*x5 + sqr(0.108550944645801 - x9)*x6 + sqr((-
     0.356106500630077) - x7)*x1 + sqr(0.331063664630561 - x8)*x2 + sqr(
     0.601956022789838 - x9)*x3 + sqr((-0.356106500630077) - x7)*x4 + sqr(
     0.331063664630561 - x8)*x5 + sqr(0.601956022789838 - x9)*x6 + sqr((-
     0.337179742155787) - x7)*x1 + sqr(0.302191024664237 - x8)*x2 + sqr((-
     1.52407070138068) - x9)*x3 + sqr((-0.337179742155787) - x7)*x4 + sqr(
     0.302191024664237 - x8)*x5 + sqr((-1.52407070138068) - x9)*x6 + sqr((-
     0.3075525748703) - x7)*x1 + sqr(0.238154230453 - x8)*x2 + sqr((-
     1.39942354596344) - x9)*x3 + sqr((-0.3075525748703) - x7)*x4 + sqr(
     0.238154230453 - x8)*x5 + sqr((-1.39942354596344) - x9)*x6 + sqr((-
     0.403477920442852) - x7)*x1 + sqr(0.236345010791453 - x8)*x2 + sqr((-
     0.595607268823303) - x9)*x3 + sqr((-0.403477920442852) - x7)*x4 + sqr(
     0.236345010791453 - x8)*x5 + sqr((-0.595607268823303) - x9)*x6 + sqr((-
     0.316788193151706) - x7)*x1 + sqr(0.323455592528099 - x8)*x2 + sqr((-
     0.829414246455166) - x9)*x3 + sqr((-0.316788193151706) - x7)*x4 + sqr(
     0.323455592528099 - x8)*x5 + sqr((-0.829414246455166) - x9)*x6) + objvar
      =E= 0;

* set non default bounds


* set non default levels

x1.l = -0.241780064467559; 
x2.l = -1.14650802158803; 
x3.l = -0.215795595893526; 
x4.l = -0.944605456286968; 
x5.l = 0.581414426969417; 
x6.l = 0.45619219348328; 
x7.l = -0.303482374080703; 
x8.l = 0.303517548021908; 
x9.l = -0.217317922829296; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
