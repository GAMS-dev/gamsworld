*  NLP written by GAMS Convert at 10/06/06 11:52:22
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*         65       65        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        118      118        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        320      235       85        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
          ,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
          ,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,x101,x102,x103
          ,x104,x105,x106,x107,x108,x109,x110,x111,x112,x113,x114,x115,x116
          ,x117,objvar;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36
          ,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53
          ,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65;


e1..  - x1 + x86 =E= 0;

e2..  - x2 + x87 =E= 0;

e3..  - x3 + x88 =E= 0;

e4..  - x4 + x89 =E= 0;

e5..  - x5 - x6 - x7 - x8 + x85 + x90 =E= 0;

e6..  - x9 - x10 - x11 - x12 + x91 =E= 0;

e7..  - x13 - x14 - x15 + x92 =E= 0;

e8..  - x16 - x17 - x18 - x19 - x20 + x93 =E= 0;

e9..  - x21 + x94 =E= 0;

e10..  - x22 + x95 =E= 0;

e11..  - x23 - x24 - x25 - x26 + x96 =E= 0;

e12..  - x27 - x28 + x97 =E= 0;

e13..  - x29 - x30 + x98 =E= 0;

e14..  - x31 + x99 =E= 0;

e15..  - x32 - x33 + x100 =E= 0;

e16..  - x34 + x101 =E= 0;

e17..  - x35 + x102 =E= 0;

e18..  - x36 + x103 =E= 0;

e19..  - x37 + x104 =E= 0;

e20..  - x38 - x39 - x40 - x41 - x42 + x105 =E= 0;

e21..  - x43 - x44 - x45 - x46 - x47 - x48 - x49 + x106 =E= 0;

e22..  - x50 - x51 - x52 - x53 - x54 - x55 - x56 + x107 =E= 0;

e23..  - x57 - x58 - x59 - x60 - x61 - x62 + x108 =E= 0;

e24..  - x63 + x109 =E= 0;

e25..  - x64 + x110 =E= 0;

e26..  - x65 + x111 =E= 0;

e27..  - x66 + x112 =E= 0;

e28..  - x67 + x113 =E= 0;

e29..  - x68 + x114 =E= 0;

e30..  - x69 + x115 =E= 0;

e31..  - x70 - x71 - x72 - x73 - x74 - x75 - x76 - x77 - x78 + x116 =E= 0;

e32..  - x79 - x80 - x81 - x82 - x83 - x84 + x117 =E= 0;

e33..    x8 - x86 =E= 0;

e34..    x7 - x87 =E= 0;

e35..    x6 - x88 =E= 0;

e36..    x5 - x89 =E= 0;

e37..    x12 + x15 + x20 - x90 =E= 0;

e38..    x14 + x19 + x21 + x26 + x84 - x91 =E= 0;

e39..    x11 + x18 + x25 - x92 =E= 0;

e40..    x10 + x13 + x22 + x24 + x83 - x93 =E= 0;

e41..    x42 + x49 + x56 + x62 - x94 =E= 0;

e42..    x48 + x55 + x61 - x95 =E= 0;

e43..    x41 + x47 + x54 - x96 =E= 0;

e44..    x1 + x40 + x46 + x53 + x60 - x97 =E= 0;

e45..    x2 + x39 + x45 + x52 + x59 - x98 =E= 0;

e46..    x3 + x44 + x51 + x58 - x99 =E= 0;

e47..    x4 + x38 + x43 + x50 + x57 - x100 =E= 0;

e48..    x28 + x78 - x101 =E= 0;

e49..    x30 + x77 - x102 =E= 0;

e50..    x31 + x76 - x103 =E= 0;

e51..    x33 + x75 - x104 =E= 0;

e52..    x34 + x63 - x105 =E= 0;

e53..    x35 + x64 - x106 =E= 0;

e54..    x36 + x65 - x107 =E= 0;

e55..    x37 + x66 - x108 =E= 0;

e56..    x74 + x82 - x109 =E= 0;

e57..    x73 + x81 - x110 =E= 0;

e58..    x72 + x80 - x111 =E= 0;

e59..    x79 - x112 =E= 0;

e60..    x27 + x71 - x113 =E= 0;

e61..    x29 + x70 - x114 =E= 0;

e62..    x32 - x115 =E= 0;

e63..    x17 - x116 =E= 0;

e64..    x9 + x16 + x23 + x67 + x68 + x69 - x85 - x117 =E= 0;

e65..  - ((-1 + log(5.69067753206697e-6*x1))*x1 + (-1 + log(7.10020519593016e-6
      *x2))*x2 + (-1 + log(7.75735008920953e-5*x3))*x3 + (-1 + log(
      3.66044269393941e-6*x4))*x4 + (-1 + log(3.66044269393941e-6*x5))*x5 + (-1
       + log(7.75735008920953e-5*x6))*x6 + (-1 + log(7.10020519593016e-6*x7))*
      x7 + (-1 + log(5.69067753206697e-6*x8))*x8 + (-1 + log(
      0.000210128178188695*x9))*x9 + (-1 + log(0.00263157894736842*x10))*x10 + 
      (-1 + log(0.000259134490800726*x11))*x11 + (-1 + log(1.92027774897361e-6*
      x12))*x12 + (-1 + log(0.000100603621730382*x13))*x13 + (-1 + log(
      0.000162232316677482*x14))*x14 + (-1 + log(1.58433410437593e-5*x15))*x15
       + (-1 + log(0.000365230094959825*x16))*x16 + (-1 + log(
      1.40680612804749e-5*x17))*x17 + (-1 + log(9.84930562395351e-5*x18))*x18
       + (-1 + log(0.000107596298687325*x19))*x19 + (-1 + log(
      0.000228990153423403*x20))*x20 + (-1 + log(2.25983082906414e-6*x21))*x21
       + (-1 + log(1.18108376246043e-5*x22))*x22 + (-1 + log(
      2.06083587503091e-5*x23))*x23 + (-1 + log(0.000378071833648393*x24))*x24
       + (-1 + log(1.53350713080816e-5*x25))*x25 + (-1 + log(
      1.39805390895873e-5*x26))*x26 + (-1 + log(1.3450622763834e-5*x27))*x27 + 
      (-1 + log(4.40827698085926e-6*x28))*x28 + (-1 + log(1.70285227756492e-5*
      x29))*x29 + (-1 + log(2.43892326415734e-6*x30))*x30 + (-1 + log(
      1.89487247508243e-5*x31))*x31 + (-1 + log(3.14001318805539e-5*x32))*x32
       + (-1 + log(2.39996928039321e-6*x33))*x33 + (-1 + log(
      4.36860545376705e-6*x34))*x34 + (-1 + log(2.28361596886975e-6*x35))*x35
       + (-1 + log(1.86846038863976e-5*x36))*x36 + (-1 + log(
      2.30407314049777e-6*x37))*x37 + (-1 + log(8.38363514419852e-5*x38))*x38
       + (-1 + log(2.13917470639827e-5*x39))*x39 + (-1 + log(
      4.48752468138575e-5*x40))*x40 + (-1 + log(5.23752160477662e-5*x41))*x41
       + (-1 + log(7.57868570432516e-6*x42))*x42 + (-1 + log(
      3.33923264433833e-5*x43))*x43 + (-1 + log(0.0010183299389002*x44))*x44 + 
      (-1 + log(5.68828213879408e-6*x45))*x45 + (-1 + log(3.3031644315254e-5*
      x46))*x46 + (-1 + log(6.20755583696475e-6*x47))*x47 + (-1 + log(
      0.00013883104262113*x48))*x48 + (-1 + log(5.76837660577184e-6*x49))*x49
       + (-1 + log(5.27120341573981e-5*x50))*x50 + (-1 + log(
      3.03905181583346e-5*x51))*x51 + (-1 + log(4.55000455000455e-5*x52))*x52
       + (-1 + log(0.000104025798398003*x53))*x53 + (-1 + log(
      0.000129533678756477*x54))*x54 + (-1 + log(0.000351370344342937*x55))*x55
       + (-1 + log(5.12242598094458e-5*x56))*x56 + (-1 + log(
      8.73499764155064e-6*x57))*x57 + (-1 + log(0.000166777851901267*x58))*x58
       + (-1 + log(1.19938591441182e-5*x59))*x59 + (-1 + log(
      1.57990362587882e-5*x60))*x60 + (-1 + log(1.34014125088784e-5*x61))*x61
       + (-1 + log(8.49754845727008e-6*x62))*x62 + (-1 + log(
      0.000323101777059774*x63))*x63 + (-1 + log(7.10444240783762e-6*x64))*x64
       + (-1 + log(1.66569501124344e-5*x65))*x65 + (-1 + log(
      3.93159032828779e-5*x66))*x66 + (-1 + log(1.28887571371493e-5*x67))*x67
       + (-1 + log(1.69825419468786e-5*x68))*x68 + (-1 + log(
      3.14001318805539e-5*x69))*x69 + (-1 + log(0.00628930817610063*x70))*x70
       + (-1 + log(0.000308546744831842*x71))*x71 + (-1 + log(
      0.000467726847521048*x72))*x72 + (-1 + log(6.03027196526563e-5*x73))*x73
       + (-1 + log(0.00107642626480086*x74))*x74 + (-1 + log(
      5.76634759543305e-5*x75))*x75 + (-1 + log(0.00134048257372654*x76))*x76
       + (-1 + log(3.58615743231128e-5*x77))*x77 + (-1 + log(
      0.000485436893203883*x78))*x78 + (-1 + log(3.93159032828779e-5*x79))*x79
       + (-1 + log(1.72720520925091e-5*x80))*x80 + (-1 + log(
      8.05321564900865e-6*x81))*x81 + (-1 + log(0.000461680517082179*x82))*x82
       + (-1 + log(0.5*x83))*x83 + (-1 + log(0.00386100386100386*x84))*x84 + (-
      1 + log(6.9415521310565e-5*x85))*x85) + objvar =E= 0;

* set non default bounds

x1.lo = 0.1; 
x2.lo = 0.1; 
x3.lo = 0.1; 
x4.lo = 0.1; 
x5.lo = 0.1; 
x6.lo = 0.1; 
x7.lo = 0.1; 
x8.lo = 0.1; 
x9.lo = 0.1; 
x10.lo = 0.1; 
x11.lo = 0.1; 
x12.lo = 0.1; 
x13.lo = 0.1; 
x14.lo = 0.1; 
x15.lo = 0.1; 
x16.lo = 0.1; 
x17.lo = 0.1; 
x18.lo = 0.1; 
x19.lo = 0.1; 
x20.lo = 0.1; 
x21.lo = 0.1; 
x22.lo = 0.1; 
x23.lo = 0.1; 
x24.lo = 0.1; 
x25.lo = 0.1; 
x26.lo = 0.1; 
x27.lo = 0.1; 
x28.lo = 0.1; 
x29.lo = 0.1; 
x30.lo = 0.1; 
x31.lo = 0.1; 
x32.lo = 0.1; 
x33.lo = 0.1; 
x34.lo = 0.1; 
x35.lo = 0.1; 
x36.lo = 0.1; 
x37.lo = 0.1; 
x38.lo = 0.1; 
x39.lo = 0.1; 
x40.lo = 0.1; 
x41.lo = 0.1; 
x42.lo = 0.1; 
x43.lo = 0.1; 
x44.lo = 0.1; 
x45.lo = 0.1; 
x46.lo = 0.1; 
x47.lo = 0.1; 
x48.lo = 0.1; 
x49.lo = 0.1; 
x50.lo = 0.1; 
x51.lo = 0.1; 
x52.lo = 0.1; 
x53.lo = 0.1; 
x54.lo = 0.1; 
x55.lo = 0.1; 
x56.lo = 0.1; 
x57.lo = 0.1; 
x58.lo = 0.1; 
x59.lo = 0.1; 
x60.lo = 0.1; 
x61.lo = 0.1; 
x62.lo = 0.1; 
x63.lo = 0.1; 
x64.lo = 0.1; 
x65.lo = 0.1; 
x66.lo = 0.1; 
x67.lo = 0.1; 
x68.lo = 0.1; 
x69.lo = 0.1; 
x70.lo = 0.1; 
x71.lo = 0.1; 
x72.lo = 0.1; 
x73.lo = 0.1; 
x74.lo = 0.1; 
x75.lo = 0.1; 
x76.lo = 0.1; 
x77.lo = 0.1; 
x78.lo = 0.1; 
x79.lo = 0.1; 
x80.lo = 0.1; 
x81.lo = 0.1; 
x82.lo = 0.1; 
x83.lo = 0.1; 
x84.lo = 0.1; 
x85.lo = 0.1; 

* set non default levels

x4.l = 0.7; 
x5.l = 0.7; 
x12.l = 0.7; 
x17.l = 0.9; 
x21.l = 0.6; 
x22.l = 0.9; 
x28.l = 0.4; 
x30.l = 0.4; 
x31.l = 0.4; 
x33.l = 1; 
x34.l = 0.5; 
x35.l = 0.5; 
x36.l = 0.5; 
x37.l = 1.1; 
x42.l = 0.3; 
x47.l = 0.2; 
x61.l = 0.7; 
x63.l = 0.2; 
x64.l = 0.3; 
x65.l = 0.2; 
x67.l = 0.2; 
x68.l = 0.2; 
x81.l = 0.2; 
x86.l = 0.1; 
x87.l = 0.1; 
x88.l = 0.1; 
x89.l = 0.7; 
x90.l = 0.9; 
x91.l = 1; 
x92.l = 0.3; 
x93.l = 1.3; 
x94.l = 0.6; 
x95.l = 0.9; 
x96.l = 0.4; 
x97.l = 0.5; 
x98.l = 0.5; 
x99.l = 0.4; 
x100.l = 1.1; 
x101.l = 0.5; 
x102.l = 0.5; 
x103.l = 0.5; 
x104.l = 1.1; 
x105.l = 0.7; 
x106.l = 0.8; 
x107.l = 0.7; 
x108.l = 1.2; 
x109.l = 0.2; 
x110.l = 0.3; 
x111.l = 0.2; 
x112.l = 0.1; 
x113.l = 0.2; 
x114.l = 0.2; 
x115.l = 0.1; 
x116.l = 0.9; 
x117.l = 0.7; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
