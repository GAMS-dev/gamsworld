*  NLP written by GAMS Convert at 07/02/05 18:32:27
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*         11       11        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         16       16        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*         71       11       60        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,objvar;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11;


e1..  - (1.173295*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) - 0.564255*x1 + 0.392417*x2 - 0.404979*x3
      + 0.927589*x4 - 0.0735084*x5) + x6 =E= 0.0426149;

e2..  - (1.42024*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) + 0.535493*x1 + 0.658799*x2 - 0.636666*x3
      - 0.681091*x4 - 0.869487*x5) + x7 =E= 0.0352053;

e3..  - (0.56444*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) + 0.586387*x1 + 0.289826*x2 + 0.854402*x3
      + 0.789312*x4 + 0.949721*x5) + x8 =E= 0.0878058;

e4..  - (1.51143*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) + 0.608734*x1 + 0.984915*x2 + 0.375699*x3
      + 0.239547*x4 + 0.463136*x5) + x9 =E= 0.0330812;

e5..  - (0.860695*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) + 0.774227*x1 + 0.325421*x2 - 0.151719*x3
      + 0.448051*x4 + 0.149926*x5) + x10 =E= 0.0580924;

e6..  - (0.0769585*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) - 0.435033*x1 - 0.688583*x2 + 0.222278*x3
      - 0.524653*x4 + 0.413248*x5) + x11 =E= 0.649704;

e7..  - (0.1452885*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) + 0.759468*x1 - 0.627795*x2 + 0.0403142*
     x3 + 0.724666*x4 - 0.0182537*x5) + x12 =E= 0.344144;

e8..  - (-0.079689*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) - 0.152448*x1 - 0.546437*x2 + 0.484134*x3
      + 0.353951*x4 + 0.887866*x5) + x13 =E= -0.627443;

e9..  - (27.3455*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3 - 0.0554288*x4
      + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 0.00180333*x3 - 0.111141
     *x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 0.00180333*x2 + 0.815808*x3 - 
     0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*x1 - 0.111141*x2 - 0.133538*x3
      + 0.389198*x4 - 0.131586*x5) + x5*(0.220429*x1 + 0.0485461*x2 - 0.38067*
     x3 - 0.131586*x4 + 0.534706*x5)) - 0.821772*x1 - 0.53412*x2 - 0.798498*x3
      - 0.658572*x4 + 0.662362*x5) + x14 =E= 0.001828;

e10..  - (0.819831*x1 - 0.2224365*(x1*(0.354033*x1 - 0.0230349*x2 - 0.211938*x3
       - 0.0554288*x4 + 0.220429*x5) + x2*(0.29135*x2 - 0.0230349*x1 - 
      0.00180333*x3 - 0.111141*x4 + 0.0485461*x5) + x3*(-0.211938*x1 - 
      0.00180333*x2 + 0.815808*x3 - 0.133538*x4 - 0.38067*x5) + x4*(-0.0554288*
      x1 - 0.111141*x2 - 0.133538*x3 + 0.389198*x4 - 0.131586*x5) + x5*(
      0.220429*x1 + 0.0485461*x2 - 0.38067*x3 - 0.131586*x4 + 0.534706*x5)) - 
      0.910632*x2 - 0.480344*x3 - 0.871758*x4 - 0.978666*x5) + x15
       =E= -0.224783;

e11..  - (sqr(x6) + sqr(x7) + sqr(x8) + sqr(x9) + sqr(x10) + sqr(x11) + sqr(x12
      ) + sqr(x13) + sqr(x14) + sqr(x15)) + objvar =E= 0;

* set non default bounds


* set non default levels

x1.l = 0.1; 
x2.l = 0.1; 
x3.l = 0.1; 
x4.l = 0.1; 
x5.l = 0.1; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
