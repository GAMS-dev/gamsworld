*  NLP written by GAMS Convert at 10/06/06 11:47:12
*  
*  Equation counts
*      Total        E        G        L        N        X        C
*          1        1        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        101      101        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        101        1      100        0
*
*  Solve m using NLP minimizing objvar;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
          ,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
          ,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,objvar;

Equations  e1;


e1..  - (sqr((-0.2) + x1) + 1e-5*sqr((-2.32657367623582) + exp(0.1*x2) + exp(
     0.1*x1)) + 1e-5*sqr((-2.57126156573617) + exp(0.1*x3) + exp(0.1*x2)) + 
     1e-5*sqr((-2.84168350521727) + exp(0.1*x4) + exp(0.1*x3)) + 1e-5*sqr((-
     3.1405459683414) + exp(0.1*x5) + exp(0.1*x4)) + 1e-5*sqr((-
     3.47084007109064) + exp(0.1*x6) + exp(0.1*x5)) + 1e-5*sqr((-
     3.83587150786099) + exp(0.1*x7) + exp(0.1*x6)) + 1e-5*sqr((-
     4.23929363596294) + exp(0.1*x8) + exp(0.1*x7)) + 1e-5*sqr((-
     4.68514403964942) + exp(0.1*x9) + exp(0.1*x8)) + 1e-5*sqr((-
     5.17788493961599) + exp(0.1*x10) + exp(0.1*x9)) + 1e-5*sqr((-
     5.72244785240548) + exp(0.1*x11) + exp(0.1*x10)) + 1e-5*sqr((-
     6.32428294668298) + exp(0.1*x12) + exp(0.1*x11)) + 1e-5*sqr((-
     6.98941359035579) + exp(0.1*x13) + exp(0.1*x12)) + 1e-5*sqr((-
     7.72449663446392) + exp(0.1*x14) + exp(0.1*x13)) + 1e-5*sqr((-
     8.53688903718274) + exp(0.1*x15) + exp(0.1*x14)) + 1e-5*sqr((-
     9.43472149473318) + exp(0.1*x16) + exp(0.1*x15)) + 1e-5*sqr((-
     10.4269798161223) + exp(0.1*x17) + exp(0.1*x16)) + 1e-5*sqr((-
     11.5235948561401) + exp(0.1*x18) + exp(0.1*x17)) + 1e-5*sqr((-
     12.7355419066922) + exp(0.1*x19) + exp(0.1*x18)) + 1e-5*sqr((-
     14.0749505412099) + exp(0.1*x20) + exp(0.1*x19)) + 1e-5*sqr((-
     15.5552260114983) + exp(0.1*x21) + exp(0.1*x20)) + 1e-5*sqr((-
     17.1911834120018) + exp(0.1*x22) + exp(0.1*x21)) + 1e-5*sqr((-
     18.9991959542488) + exp(0.1*x23) + exp(0.1*x22)) + 1e-5*sqr((-
     20.9973588354563) + exp(0.1*x24) + exp(0.1*x23)) + 1e-5*sqr((-
     23.2056703413451) + exp(0.1*x25) + exp(0.1*x24)) + 1e-5*sqr((-
     25.6462319957052) + exp(0.1*x26) + exp(0.1*x25)) + 1e-5*sqr((-
     28.3434697598745) + exp(0.1*x27) + exp(0.1*x26)) + 1e-5*sqr((-
     31.3243784959699) + exp(0.1*x28) + exp(0.1*x27)) + 1e-5*sqr((-
     34.6187921405401) + exp(0.1*x29) + exp(0.1*x28)) + 1e-5*sqr((-
     38.2596822926307) + exp(0.1*x30) + exp(0.1*x29)) + 1e-5*sqr((-
     42.2834882046293) + exp(0.1*x31) + exp(0.1*x30)) + 1e-5*sqr((-
     46.730481478551) + exp(0.1*x32) + exp(0.1*x31)) + 1e-5*sqr((-
     51.6451691177672) + exp(0.1*x33) + exp(0.1*x32)) + 1e-5*sqr((-
     57.0767389680549) + exp(0.1*x34) + exp(0.1*x33)) + 1e-5*sqr((-
     63.0795520060893) + exp(0.1*x35) + exp(0.1*x34)) + 1e-5*sqr((-
     69.7136864023703) + exp(0.1*x36) + exp(0.1*x35)) + 1e-5*sqr((-
     77.0455388037454) + exp(0.1*x37) + exp(0.1*x36)) + 1e-5*sqr((-
     85.1484888533682) + exp(0.1*x38) + exp(0.1*x37)) + 1e-5*sqr((-
     94.103633598831) + exp(0.1*x39) + exp(0.1*x38)) + 1e-5*sqr((-
     104.000599138674) + exp(0.1*x40) + exp(0.1*x39)) + 1e-5*sqr((-
     114.938437630506) + exp(0.1*x41) + exp(0.1*x40)) + 1e-5*sqr((-
     127.026618638287) + exp(0.1*x42) + exp(0.1*x41)) + 1e-5*sqr((-
     140.386124740521) + exp(0.1*x43) + exp(0.1*x42)) + 1e-5*sqr((-
     155.150662364564) + exp(0.1*x44) + exp(0.1*x43)) + 1e-5*sqr((-
     171.46799996549) + exp(0.1*x45) + exp(0.1*x44)) + 1e-5*sqr((-
     189.501446942456) + exp(0.1*x46) + exp(0.1*x45)) + 1e-5*sqr((-
     209.431488094057) + exp(0.1*x47) + exp(0.1*x46)) + 1e-5*sqr((-
     231.457589970858) + exp(0.1*x48) + exp(0.1*x47)) + 1e-5*sqr((-
     255.80019720367) + exp(0.1*x49) + exp(0.1*x48)) + 1e-5*sqr((-
     282.702938787512) + exp(0.1*x50) + exp(0.1*x49)) + 1e-5*sqr((-
     312.435066402478) + exp(0.1*x51) + exp(0.1*x50)) + 1e-5*sqr((-
     345.294149175053) + exp(0.1*x52) + exp(0.1*x51)) + 1e-5*sqr((-
     381.609051849943) + exp(0.1*x53) + exp(0.1*x52)) + 1e-5*sqr((-
     421.743226178979) + exp(0.1*x54) + exp(0.1*x53)) + 1e-5*sqr((-
     466.098348468408) + exp(0.1*x55) + exp(0.1*x54)) + 1e-5*sqr((-
     515.118339690373) + exp(0.1*x56) + exp(0.1*x55)) + 1e-5*sqr((-
     569.293808393213) + exp(0.1*x57) + exp(0.1*x56)) + 1e-5*sqr((-
     629.166960876709) + exp(0.1*x58) + exp(0.1*x57)) + 1e-5*sqr((-
     695.337027774978) + exp(0.1*x59) + exp(0.1*x58)) + 1e-5*sqr((-
     768.466261358064) + exp(0.1*x60) + exp(0.1*x59)) + 1e-5*sqr((-
     849.286563575252) + exp(0.1*x61) + exp(0.1*x60)) + 1e-5*sqr((-
     938.606811175773) + exp(0.1*x62) + exp(0.1*x61)) + 1e-5*sqr((-
     1037.32095121919) + exp(0.1*x63) + exp(0.1*x62)) + 1e-5*sqr((-
     1146.41694799801) + exp(0.1*x64) + exp(0.1*x63)) + 1e-5*sqr((-
     1266.98667091644) + exp(0.1*x65) + exp(0.1*x64)) + 1e-5*sqr((-
     1400.23682228633) + exp(0.1*x66) + exp(0.1*x65)) + 1e-5*sqr((-
     1547.50101440952) + exp(0.1*x67) + exp(0.1*x66)) + 1e-5*sqr((-
     1710.25311681796) + exp(0.1*x68) + exp(0.1*x67)) + 1e-5*sqr((-
     1890.12200725544) + exp(0.1*x69) + exp(0.1*x68)) + 1e-5*sqr((-
     2088.90787403348) + exp(0.1*x70) + exp(0.1*x69)) + 1e-5*sqr((-
     2308.60023292104) + exp(0.1*x71) + exp(0.1*x70)) + 1e-5*sqr((-
     2551.39783888699) + exp(0.1*x72) + exp(0.1*x71)) + 1e-5*sqr((-
     2819.73069197896) + exp(0.1*x73) + exp(0.1*x72)) + 1e-5*sqr((-
     3116.28435758047) + exp(0.1*x74) + exp(0.1*x73)) + 1e-5*sqr((-
     3444.02684445199) + exp(0.1*x75) + exp(0.1*x74)) + 1e-5*sqr((-
     3806.23830956018) + exp(0.1*x76) + exp(0.1*x75)) + 1e-5*sqr((-
     4206.54388699133) + exp(0.1*x77) + exp(0.1*x76)) + 1e-5*sqr((-
     4648.94996951171) + exp(0.1*x78) + exp(0.1*x77)) + 1e-5*sqr((-
     5137.88430589301) + exp(0.1*x79) + exp(0.1*x78)) + 1e-5*sqr((-
     5678.24031531024) + exp(0.1*x80) + exp(0.1*x79)) + 1e-5*sqr((-
     6275.42606232557) + exp(0.1*x81) + exp(0.1*x80)) + 1e-5*sqr((-
     6935.41838261619) + exp(0.1*x82) + exp(0.1*x81)) + 1e-5*sqr((-
     7664.82270115467) + exp(0.1*x83) + exp(0.1*x82)) + 1e-5*sqr((-
     8470.93914152217) + exp(0.1*x84) + exp(0.1*x83)) + 1e-5*sqr((-
     9361.83558799899) + exp(0.1*x85) + exp(0.1*x84)) + 1e-5*sqr((-
     10346.4284316621) + exp(0.1*x86) + exp(0.1*x85)) + 1e-5*sqr((-
     11434.571808624) + exp(0.1*x87) + exp(0.1*x86)) + 1e-5*sqr((-
     12637.1562235389) + exp(0.1*x88) + exp(0.1*x87)) + 1e-5*sqr((-
     13966.2175454339) + exp(0.1*x89) + exp(0.1*x88)) + 1e-5*sqr((-
     15435.0574667314) + exp(0.1*x90) + exp(0.1*x89)) + 1e-5*sqr((-
     17058.3766310579) + exp(0.1*x91) + exp(0.1*x90)) + 1e-5*sqr((-
     18852.4217622264) + exp(0.1*x92) + exp(0.1*x91)) + 1e-5*sqr((-
     20835.1482669091) + exp(0.1*x93) + exp(0.1*x92)) + 1e-5*sqr((-
     23026.3999383822) + exp(0.1*x94) + exp(0.1*x93)) + 1e-5*sqr((-
     25448.1075598789) + exp(0.1*x95) + exp(0.1*x94)) + 1e-5*sqr((-
     28124.5083952391) + exp(0.1*x96) + exp(0.1*x95)) + 1e-5*sqr((-
     31082.3887635927) + exp(0.1*x97) + exp(0.1*x96)) + 1e-5*sqr((-
     34351.3521258439) + exp(0.1*x98) + exp(0.1*x97)) + 1e-5*sqr((-
     37964.1153660588) + exp(0.1*x99) + exp(0.1*x98)) + 1e-5*sqr((-
     41956.836233037) + exp(0.1*x100) + exp(0.1*x99)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x2)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*
     x3)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x4)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x5)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*
     x6)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x7)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x8)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*
     x9)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x10)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x11)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x12)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x13)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x14)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x15)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x16)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x17)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x18)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x19)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x20)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x21)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x22)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x23)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x24)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x25)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x26)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x27)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x28)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x29)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x30)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x31)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x32)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x33)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x34)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x35)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x36)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x37)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x38)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x39)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x40)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x41)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x42)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x43)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x44)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x45)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x46)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x47)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x48)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x49)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x50)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x51)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x52)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x53)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x54)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x55)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x56)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x57)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x58)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x59)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x60)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x61)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x62)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x63)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x64)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x65)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x66)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x67)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x68)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x69)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x70)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x71)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x72)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x73)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x74)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x75)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x76)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x77)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x78)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x79)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x80)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x81)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x82)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x83)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x84)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x85)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x86)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x87)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x88)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x89)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x90)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x91)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x92)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x93)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x94)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x95)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x96)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x97)) + 1e-5*sqr((-
     0.90483741803596) + exp(0.1*x98)) + 1e-5*sqr((-0.90483741803596) + exp(0.1
     *x99)) + 1e-5*sqr((-0.90483741803596) + exp(0.1*x100)) + sqr((-1) + 100*x1
     *x1 + 99*x2*x2 + 98*x3*x3 + 97*x4*x4 + 96*x5*x5 + 95*x6*x6 + 94*x7*x7 + 93
     *x8*x8 + 92*x9*x9 + 91*x10*x10 + 90*x11*x11 + 89*x12*x12 + 88*x13*x13 + 87
     *x14*x14 + 86*x15*x15 + 85*x16*x16 + 84*x17*x17 + 83*x18*x18 + 82*x19*x19
      + 81*x20*x20 + 80*x21*x21 + 79*x22*x22 + 78*x23*x23 + 77*x24*x24 + 76*x25
     *x25 + 75*x26*x26 + 74*x27*x27 + 73*x28*x28 + 72*x29*x29 + 71*x30*x30 + 70
     *x31*x31 + 69*x32*x32 + 68*x33*x33 + 67*x34*x34 + 66*x35*x35 + 65*x36*x36
      + 64*x37*x37 + 63*x38*x38 + 62*x39*x39 + 61*x40*x40 + 60*x41*x41 + 59*x42
     *x42 + 58*x43*x43 + 57*x44*x44 + 56*x45*x45 + 55*x46*x46 + 54*x47*x47 + 53
     *x48*x48 + 52*x49*x49 + 51*x50*x50 + 50*x51*x51 + 49*x52*x52 + 48*x53*x53
      + 47*x54*x54 + 46*x55*x55 + 45*x56*x56 + 44*x57*x57 + 43*x58*x58 + 42*x59
     *x59 + 41*x60*x60 + 40*x61*x61 + 39*x62*x62 + 38*x63*x63 + 37*x64*x64 + 36
     *x65*x65 + 35*x66*x66 + 34*x67*x67 + 33*x68*x68 + 32*x69*x69 + 31*x70*x70
      + 30*x71*x71 + 29*x72*x72 + 28*x73*x73 + 27*x74*x74 + 26*x75*x75 + 25*x76
     *x76 + 24*x77*x77 + 23*x78*x78 + 22*x79*x79 + 21*x80*x80 + 20*x81*x81 + 19
     *x82*x82 + 18*x83*x83 + 17*x84*x84 + 16*x85*x85 + 15*x86*x86 + 14*x87*x87
      + 13*x88*x88 + 12*x89*x89 + 11*x90*x90 + 10*x91*x91 + 9*x92*x92 + 8*x93*
     x93 + 7*x94*x94 + 6*x95*x95 + 5*x96*x96 + 4*x97*x97 + 3*x98*x98 + 2*x99*
     x99 + x100*x100)) + objvar =E= 0;

* set non default bounds


* set non default levels

x1.l = 0.5; 
x2.l = 0.5; 
x3.l = 0.5; 
x4.l = 0.5; 
x5.l = 0.5; 
x6.l = 0.5; 
x7.l = 0.5; 
x8.l = 0.5; 
x9.l = 0.5; 
x10.l = 0.5; 
x11.l = 0.5; 
x12.l = 0.5; 
x13.l = 0.5; 
x14.l = 0.5; 
x15.l = 0.5; 
x16.l = 0.5; 
x17.l = 0.5; 
x18.l = 0.5; 
x19.l = 0.5; 
x20.l = 0.5; 
x21.l = 0.5; 
x22.l = 0.5; 
x23.l = 0.5; 
x24.l = 0.5; 
x25.l = 0.5; 
x26.l = 0.5; 
x27.l = 0.5; 
x28.l = 0.5; 
x29.l = 0.5; 
x30.l = 0.5; 
x31.l = 0.5; 
x32.l = 0.5; 
x33.l = 0.5; 
x34.l = 0.5; 
x35.l = 0.5; 
x36.l = 0.5; 
x37.l = 0.5; 
x38.l = 0.5; 
x39.l = 0.5; 
x40.l = 0.5; 
x41.l = 0.5; 
x42.l = 0.5; 
x43.l = 0.5; 
x44.l = 0.5; 
x45.l = 0.5; 
x46.l = 0.5; 
x47.l = 0.5; 
x48.l = 0.5; 
x49.l = 0.5; 
x50.l = 0.5; 
x51.l = 0.5; 
x52.l = 0.5; 
x53.l = 0.5; 
x54.l = 0.5; 
x55.l = 0.5; 
x56.l = 0.5; 
x57.l = 0.5; 
x58.l = 0.5; 
x59.l = 0.5; 
x60.l = 0.5; 
x61.l = 0.5; 
x62.l = 0.5; 
x63.l = 0.5; 
x64.l = 0.5; 
x65.l = 0.5; 
x66.l = 0.5; 
x67.l = 0.5; 
x68.l = 0.5; 
x69.l = 0.5; 
x70.l = 0.5; 
x71.l = 0.5; 
x72.l = 0.5; 
x73.l = 0.5; 
x74.l = 0.5; 
x75.l = 0.5; 
x76.l = 0.5; 
x77.l = 0.5; 
x78.l = 0.5; 
x79.l = 0.5; 
x80.l = 0.5; 
x81.l = 0.5; 
x82.l = 0.5; 
x83.l = 0.5; 
x84.l = 0.5; 
x85.l = 0.5; 
x86.l = 0.5; 
x87.l = 0.5; 
x88.l = 0.5; 
x89.l = 0.5; 
x90.l = 0.5; 
x91.l = 0.5; 
x92.l = 0.5; 
x93.l = 0.5; 
x94.l = 0.5; 
x95.l = 0.5; 
x96.l = 0.5; 
x97.l = 0.5; 
x98.l = 0.5; 
x99.l = 0.5; 
x100.l = 0.5; 

* set non default marginals


Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

Solve m using NLP minimizing objvar;
